'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("inventory"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class inventory
    Inherits Global.System.Data.DataSet

    Private tableinv_INVENTORY As inv_INVENTORYDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("inv_INVENTORY")) Is Nothing) Then
                MyBase.Tables.Add(New inv_INVENTORYDataTable(ds.Tables("inv_INVENTORY")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property inv_INVENTORY() As inv_INVENTORYDataTable
        Get
            Return Me.tableinv_INVENTORY
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As inventory = CType(MyBase.Clone, inventory)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("inv_INVENTORY")) Is Nothing) Then
                MyBase.Tables.Add(New inv_INVENTORYDataTable(ds.Tables("inv_INVENTORY")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableinv_INVENTORY = CType(MyBase.Tables("inv_INVENTORY"), inv_INVENTORYDataTable)
        If (initTable = True) Then
            If (Not (Me.tableinv_INVENTORY) Is Nothing) Then
                Me.tableinv_INVENTORY.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "inventory"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/inventory.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableinv_INVENTORY = New inv_INVENTORYDataTable()
        MyBase.Tables.Add(Me.tableinv_INVENTORY)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeinv_INVENTORY() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As inventory = New inventory()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub inv_INVENTORYRowChangeEventHandler(ByVal sender As Object, ByVal e As inv_INVENTORYRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class inv_INVENTORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of inv_INVENTORYRow)

        Private columnID As Global.System.Data.DataColumn

        Private columnPLATETYPE As Global.System.Data.DataColumn

        Private columnCATEGORY_ID As Global.System.Data.DataColumn

        Private columnSUBCATEGORY_ID As Global.System.Data.DataColumn

        Private columnLOCATION_ID As Global.System.Data.DataColumn

        Private columnBRANCHNUMBER As Global.System.Data.DataColumn

        Private columnSUPPLIERNUMBER As Global.System.Data.DataColumn

        Private columnITEMNUMBERINT As Global.System.Data.DataColumn

        Private columnITEMNUMBER As Global.System.Data.DataColumn

        Private columnITEMCODE As Global.System.Data.DataColumn

        Private columnSHOPSTATUS As Global.System.Data.DataColumn

        Private columnITEMDELETED As Global.System.Data.DataColumn

        Private columnNO_ORDERALONE As Global.System.Data.DataColumn

        Private columnNO_PUBLICAUCTION As Global.System.Data.DataColumn

        Private columnSTATUS_ID As Global.System.Data.DataColumn

        Private columnLANG1_DESCRIPTION As Global.System.Data.DataColumn

        Private columnLANG2_DESCRIPTION As Global.System.Data.DataColumn

        Private columnLANG3_DESCRIPTION As Global.System.Data.DataColumn

        Private columnLANG4_DESCRIPTION As Global.System.Data.DataColumn

        Private columnLANG5_DESCRIPTION As Global.System.Data.DataColumn

        Private columnLANG6_DESCRIPTION As Global.System.Data.DataColumn

        Private columnCREATEDATE As Global.System.Data.DataColumn

        Private columnONPROCESS As Global.System.Data.DataColumn

        Private columnRELEASE_DATE As Global.System.Data.DataColumn

        Private columnONBARGAIN As Global.System.Data.DataColumn

        Private columnONAUCTION As Global.System.Data.DataColumn

        Private columnONFEATURED As Global.System.Data.DataColumn

        Private columnONSPECIAL As Global.System.Data.DataColumn

        Private columnONEBAY As Global.System.Data.DataColumn

        Private columnEBAYID As Global.System.Data.DataColumn

        Private columnONSPECIAL_FROM_DATE As Global.System.Data.DataColumn

        Private columnONSPECIAL_TO_DATE As Global.System.Data.DataColumn

        Private columnQTYONSTOCK_CUR As Global.System.Data.DataColumn

        Private columnQTYONSTOCK_MIN As Global.System.Data.DataColumn

        Private columnPURCHASE_PRICE As Global.System.Data.DataColumn

        Private columnAPPRAISAL_PRICE As Global.System.Data.DataColumn

        Private columnDEALER_PRICE As Global.System.Data.DataColumn

        Private columnSELL_PRICE As Global.System.Data.DataColumn

        Private columnSPECIAL_SELL_PRICE As Global.System.Data.DataColumn

        Private columnSPECIAL_DEALER_PRICE As Global.System.Data.DataColumn

        Private columnAUCTION_PRICE As Global.System.Data.DataColumn

        Private columnNOTES As Global.System.Data.DataColumn

        Private columnICON_NAME As Global.System.Data.DataColumn

        Private columnPICTURE_NAME As Global.System.Data.DataColumn

        Private columnPICTURE_HIRES_NAME As Global.System.Data.DataColumn

        Private columnCERTIFICATE_NAME As Global.System.Data.DataColumn

        Private columnMOVIE_NAME As Global.System.Data.DataColumn

        Private columnGALLERY_NAME As Global.System.Data.DataColumn

        Private columnBANNER_NAME As Global.System.Data.DataColumn

        Private columnLASTMODIFY_DATE As Global.System.Data.DataColumn

        Private columnLASTMODIFY_USER As Global.System.Data.DataColumn

        Private columnLASTMODIFY_USER_ID As Global.System.Data.DataColumn

        Private columnINDEXWORDS As Global.System.Data.DataColumn

        Private columnREMARKS As Global.System.Data.DataColumn

        Private columnCLUB_ITEM As Global.System.Data.DataColumn

        Private columnAUTOGENERATED As Global.System.Data.DataColumn

        Private columnITEM_SOLD As Global.System.Data.DataColumn

        Private columnSIMILAR_ITEMS As Global.System.Data.DataColumn

        Private columnsamplepic As Global.System.Data.DataColumn

        Private columnsmartsort As Global.System.Data.DataColumn

        Private columnopthash As Global.System.Data.DataColumn

        Private columnHAS_WHITE_GOLD As Global.System.Data.DataColumn

        Private columnHAS_YELLOW_GOLD As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "inv_INVENTORY"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PLATETYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLATETYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CATEGORY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORY_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SUBCATEGORY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCATEGORY_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LOCATION_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCATION_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BRANCHNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANCHNUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SUPPLIERNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMNUMBERINTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNUMBERINT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SHOPSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOPSTATUS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEMDELETEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMDELETED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NO_ORDERALONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_ORDERALONE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NO_PUBLICAUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_PUBLICAUCTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property STATUS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LANG1_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLANG1_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LANG2_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLANG2_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LANG3_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLANG3_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LANG4_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLANG4_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LANG5_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLANG5_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LANG6_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLANG6_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONPROCESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONPROCESS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RELEASE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRELEASE_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONBARGAINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONBARGAIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONAUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONAUCTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONFEATUREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONFEATURED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONSPECIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONSPECIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONEBAYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONEBAY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EBAYIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEBAYID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONSPECIAL_FROM_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONSPECIAL_FROM_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ONSPECIAL_TO_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnONSPECIAL_TO_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QTYONSTOCK_CURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTYONSTOCK_CUR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QTYONSTOCK_MINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTYONSTOCK_MIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PURCHASE_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPURCHASE_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APPRAISAL_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPRAISAL_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DEALER_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEALER_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SELL_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSELL_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPECIAL_SELL_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIAL_SELL_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPECIAL_DEALER_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIAL_DEALER_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AUCTION_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUCTION_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTES
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ICON_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnICON_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PICTURE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICTURE_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PICTURE_HIRES_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICTURE_HIRES_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CERTIFICATE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATE_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOVIE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIE_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GALLERY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGALLERY_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BANNER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANNER_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LASTMODIFY_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLASTMODIFY_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LASTMODIFY_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLASTMODIFY_USER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LASTMODIFY_USER_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLASTMODIFY_USER_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INDEXWORDSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDEXWORDS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARKS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CLUB_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLUB_ITEM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AUTOGENERATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTOGENERATED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEM_SOLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_SOLD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SIMILAR_ITEMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIMILAR_ITEMS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property samplepicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsamplepic
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property smartsortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsmartsort
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property opthashColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnopthash
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HAS_WHITE_GOLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHAS_WHITE_GOLD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HAS_YELLOW_GOLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHAS_YELLOW_GOLD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As inv_INVENTORYRow
            Get
                Return CType(Me.Rows(index), inv_INVENTORYRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event inv_INVENTORYRowChanging As inv_INVENTORYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event inv_INVENTORYRowChanged As inv_INVENTORYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event inv_INVENTORYRowDeleting As inv_INVENTORYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event inv_INVENTORYRowDeleted As inv_INVENTORYRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub Addinv_INVENTORYRow(ByVal row As inv_INVENTORYRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function Addinv_INVENTORYRow( _
                    ByVal PLATETYPE As Integer, _
                    ByVal CATEGORY_ID As Integer, _
                    ByVal SUBCATEGORY_ID As Integer, _
                    ByVal LOCATION_ID As Integer, _
                    ByVal BRANCHNUMBER As Integer, _
                    ByVal SUPPLIERNUMBER As Integer, _
                    ByVal ITEMNUMBERINT As Integer, _
                    ByVal ITEMNUMBER As String, _
                    ByVal ITEMCODE As String, _
                    ByVal SHOPSTATUS As Boolean, _
                    ByVal ITEMDELETED As Boolean, _
                    ByVal NO_ORDERALONE As Boolean, _
                    ByVal NO_PUBLICAUCTION As Boolean, _
                    ByVal STATUS_ID As Integer, _
                    ByVal LANG1_DESCRIPTION As String, _
                    ByVal LANG2_DESCRIPTION As String, _
                    ByVal LANG3_DESCRIPTION As String, _
                    ByVal LANG4_DESCRIPTION As String, _
                    ByVal LANG5_DESCRIPTION As String, _
                    ByVal LANG6_DESCRIPTION As String, _
                    ByVal CREATEDATE As Date, _
                    ByVal ONPROCESS As Boolean, _
                    ByVal RELEASE_DATE As Date, _
                    ByVal ONBARGAIN As Boolean, _
                    ByVal ONAUCTION As Boolean, _
                    ByVal ONFEATURED As Boolean, _
                    ByVal ONSPECIAL As Boolean, _
                    ByVal ONEBAY As Boolean, _
                    ByVal EBAYID As String, _
                    ByVal ONSPECIAL_FROM_DATE As Date, _
                    ByVal ONSPECIAL_TO_DATE As Date, _
                    ByVal QTYONSTOCK_CUR As Integer, _
                    ByVal QTYONSTOCK_MIN As Integer, _
                    ByVal PURCHASE_PRICE As Decimal, _
                    ByVal APPRAISAL_PRICE As Decimal, _
                    ByVal DEALER_PRICE As Decimal, _
                    ByVal SELL_PRICE As Decimal, _
                    ByVal SPECIAL_SELL_PRICE As Decimal, _
                    ByVal SPECIAL_DEALER_PRICE As Decimal, _
                    ByVal AUCTION_PRICE As Decimal, _
                    ByVal NOTES As String, _
                    ByVal ICON_NAME As String, _
                    ByVal PICTURE_NAME As String, _
                    ByVal PICTURE_HIRES_NAME As String, _
                    ByVal CERTIFICATE_NAME As String, _
                    ByVal MOVIE_NAME As String, _
                    ByVal GALLERY_NAME As String, _
                    ByVal BANNER_NAME As String, _
                    ByVal LASTMODIFY_DATE As Date, _
                    ByVal LASTMODIFY_USER As String, _
                    ByVal LASTMODIFY_USER_ID As Integer, _
                    ByVal INDEXWORDS As String, _
                    ByVal REMARKS As String, _
                    ByVal CLUB_ITEM As Boolean, _
                    ByVal AUTOGENERATED As Boolean, _
                    ByVal ITEM_SOLD As Boolean, _
                    ByVal SIMILAR_ITEMS As String, _
                    ByVal samplepic As Boolean, _
                    ByVal smartsort As String, _
                    ByVal opthash As String, _
                    ByVal HAS_WHITE_GOLD As Boolean, _
                    ByVal HAS_YELLOW_GOLD As Boolean) As inv_INVENTORYRow
            Dim rowinv_INVENTORYRow As inv_INVENTORYRow = CType(Me.NewRow, inv_INVENTORYRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PLATETYPE, CATEGORY_ID, SUBCATEGORY_ID, LOCATION_ID, BRANCHNUMBER, SUPPLIERNUMBER, ITEMNUMBERINT, ITEMNUMBER, ITEMCODE, SHOPSTATUS, ITEMDELETED, NO_ORDERALONE, NO_PUBLICAUCTION, STATUS_ID, LANG1_DESCRIPTION, LANG2_DESCRIPTION, LANG3_DESCRIPTION, LANG4_DESCRIPTION, LANG5_DESCRIPTION, LANG6_DESCRIPTION, CREATEDATE, ONPROCESS, RELEASE_DATE, ONBARGAIN, ONAUCTION, ONFEATURED, ONSPECIAL, ONEBAY, EBAYID, ONSPECIAL_FROM_DATE, ONSPECIAL_TO_DATE, QTYONSTOCK_CUR, QTYONSTOCK_MIN, PURCHASE_PRICE, APPRAISAL_PRICE, DEALER_PRICE, SELL_PRICE, SPECIAL_SELL_PRICE, SPECIAL_DEALER_PRICE, AUCTION_PRICE, NOTES, ICON_NAME, PICTURE_NAME, PICTURE_HIRES_NAME, CERTIFICATE_NAME, MOVIE_NAME, GALLERY_NAME, BANNER_NAME, LASTMODIFY_DATE, LASTMODIFY_USER, LASTMODIFY_USER_ID, INDEXWORDS, REMARKS, CLUB_ITEM, AUTOGENERATED, ITEM_SOLD, SIMILAR_ITEMS, samplepic, smartsort, opthash, HAS_WHITE_GOLD, HAS_YELLOW_GOLD}
            rowinv_INVENTORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowinv_INVENTORYRow)
            Return rowinv_INVENTORYRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByID(ByVal ID As Integer) As inv_INVENTORYRow
            Return CType(Me.Rows.Find(New Object() {ID}), inv_INVENTORYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As inv_INVENTORYDataTable = CType(MyBase.Clone, inv_INVENTORYDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New inv_INVENTORYDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnPLATETYPE = MyBase.Columns("PLATETYPE")
            Me.columnCATEGORY_ID = MyBase.Columns("CATEGORY_ID")
            Me.columnSUBCATEGORY_ID = MyBase.Columns("SUBCATEGORY_ID")
            Me.columnLOCATION_ID = MyBase.Columns("LOCATION_ID")
            Me.columnBRANCHNUMBER = MyBase.Columns("BRANCHNUMBER")
            Me.columnSUPPLIERNUMBER = MyBase.Columns("SUPPLIERNUMBER")
            Me.columnITEMNUMBERINT = MyBase.Columns("ITEMNUMBERINT")
            Me.columnITEMNUMBER = MyBase.Columns("ITEMNUMBER")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnSHOPSTATUS = MyBase.Columns("SHOPSTATUS")
            Me.columnITEMDELETED = MyBase.Columns("ITEMDELETED")
            Me.columnNO_ORDERALONE = MyBase.Columns("NO_ORDERALONE")
            Me.columnNO_PUBLICAUCTION = MyBase.Columns("NO_PUBLICAUCTION")
            Me.columnSTATUS_ID = MyBase.Columns("STATUS_ID")
            Me.columnLANG1_DESCRIPTION = MyBase.Columns("LANG1_DESCRIPTION")
            Me.columnLANG2_DESCRIPTION = MyBase.Columns("LANG2_DESCRIPTION")
            Me.columnLANG3_DESCRIPTION = MyBase.Columns("LANG3_DESCRIPTION")
            Me.columnLANG4_DESCRIPTION = MyBase.Columns("LANG4_DESCRIPTION")
            Me.columnLANG5_DESCRIPTION = MyBase.Columns("LANG5_DESCRIPTION")
            Me.columnLANG6_DESCRIPTION = MyBase.Columns("LANG6_DESCRIPTION")
            Me.columnCREATEDATE = MyBase.Columns("CREATEDATE")
            Me.columnONPROCESS = MyBase.Columns("ONPROCESS")
            Me.columnRELEASE_DATE = MyBase.Columns("RELEASE_DATE")
            Me.columnONBARGAIN = MyBase.Columns("ONBARGAIN")
            Me.columnONAUCTION = MyBase.Columns("ONAUCTION")
            Me.columnONFEATURED = MyBase.Columns("ONFEATURED")
            Me.columnONSPECIAL = MyBase.Columns("ONSPECIAL")
            Me.columnONEBAY = MyBase.Columns("ONEBAY")
            Me.columnEBAYID = MyBase.Columns("EBAYID")
            Me.columnONSPECIAL_FROM_DATE = MyBase.Columns("ONSPECIAL_FROM_DATE")
            Me.columnONSPECIAL_TO_DATE = MyBase.Columns("ONSPECIAL_TO_DATE")
            Me.columnQTYONSTOCK_CUR = MyBase.Columns("QTYONSTOCK_CUR")
            Me.columnQTYONSTOCK_MIN = MyBase.Columns("QTYONSTOCK_MIN")
            Me.columnPURCHASE_PRICE = MyBase.Columns("PURCHASE_PRICE")
            Me.columnAPPRAISAL_PRICE = MyBase.Columns("APPRAISAL_PRICE")
            Me.columnDEALER_PRICE = MyBase.Columns("DEALER_PRICE")
            Me.columnSELL_PRICE = MyBase.Columns("SELL_PRICE")
            Me.columnSPECIAL_SELL_PRICE = MyBase.Columns("SPECIAL_SELL_PRICE")
            Me.columnSPECIAL_DEALER_PRICE = MyBase.Columns("SPECIAL_DEALER_PRICE")
            Me.columnAUCTION_PRICE = MyBase.Columns("AUCTION_PRICE")
            Me.columnNOTES = MyBase.Columns("NOTES")
            Me.columnICON_NAME = MyBase.Columns("ICON_NAME")
            Me.columnPICTURE_NAME = MyBase.Columns("PICTURE_NAME")
            Me.columnPICTURE_HIRES_NAME = MyBase.Columns("PICTURE_HIRES_NAME")
            Me.columnCERTIFICATE_NAME = MyBase.Columns("CERTIFICATE_NAME")
            Me.columnMOVIE_NAME = MyBase.Columns("MOVIE_NAME")
            Me.columnGALLERY_NAME = MyBase.Columns("GALLERY_NAME")
            Me.columnBANNER_NAME = MyBase.Columns("BANNER_NAME")
            Me.columnLASTMODIFY_DATE = MyBase.Columns("LASTMODIFY_DATE")
            Me.columnLASTMODIFY_USER = MyBase.Columns("LASTMODIFY_USER")
            Me.columnLASTMODIFY_USER_ID = MyBase.Columns("LASTMODIFY_USER_ID")
            Me.columnINDEXWORDS = MyBase.Columns("INDEXWORDS")
            Me.columnREMARKS = MyBase.Columns("REMARKS")
            Me.columnCLUB_ITEM = MyBase.Columns("CLUB_ITEM")
            Me.columnAUTOGENERATED = MyBase.Columns("AUTOGENERATED")
            Me.columnITEM_SOLD = MyBase.Columns("ITEM_SOLD")
            Me.columnSIMILAR_ITEMS = MyBase.Columns("SIMILAR_ITEMS")
            Me.columnsamplepic = MyBase.Columns("samplepic")
            Me.columnsmartsort = MyBase.Columns("smartsort")
            Me.columnopthash = MyBase.Columns("opthash")
            Me.columnHAS_WHITE_GOLD = MyBase.Columns("HAS_WHITE_GOLD")
            Me.columnHAS_YELLOW_GOLD = MyBase.Columns("HAS_YELLOW_GOLD")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnPLATETYPE = New Global.System.Data.DataColumn("PLATETYPE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLATETYPE)
            Me.columnCATEGORY_ID = New Global.System.Data.DataColumn("CATEGORY_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORY_ID)
            Me.columnSUBCATEGORY_ID = New Global.System.Data.DataColumn("SUBCATEGORY_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCATEGORY_ID)
            Me.columnLOCATION_ID = New Global.System.Data.DataColumn("LOCATION_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCATION_ID)
            Me.columnBRANCHNUMBER = New Global.System.Data.DataColumn("BRANCHNUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANCHNUMBER)
            Me.columnSUPPLIERNUMBER = New Global.System.Data.DataColumn("SUPPLIERNUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNUMBER)
            Me.columnITEMNUMBERINT = New Global.System.Data.DataColumn("ITEMNUMBERINT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNUMBERINT)
            Me.columnITEMNUMBER = New Global.System.Data.DataColumn("ITEMNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNUMBER)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnSHOPSTATUS = New Global.System.Data.DataColumn("SHOPSTATUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOPSTATUS)
            Me.columnITEMDELETED = New Global.System.Data.DataColumn("ITEMDELETED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMDELETED)
            Me.columnNO_ORDERALONE = New Global.System.Data.DataColumn("NO_ORDERALONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_ORDERALONE)
            Me.columnNO_PUBLICAUCTION = New Global.System.Data.DataColumn("NO_PUBLICAUCTION", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_PUBLICAUCTION)
            Me.columnSTATUS_ID = New Global.System.Data.DataColumn("STATUS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS_ID)
            Me.columnLANG1_DESCRIPTION = New Global.System.Data.DataColumn("LANG1_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLANG1_DESCRIPTION)
            Me.columnLANG2_DESCRIPTION = New Global.System.Data.DataColumn("LANG2_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLANG2_DESCRIPTION)
            Me.columnLANG3_DESCRIPTION = New Global.System.Data.DataColumn("LANG3_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLANG3_DESCRIPTION)
            Me.columnLANG4_DESCRIPTION = New Global.System.Data.DataColumn("LANG4_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLANG4_DESCRIPTION)
            Me.columnLANG5_DESCRIPTION = New Global.System.Data.DataColumn("LANG5_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLANG5_DESCRIPTION)
            Me.columnLANG6_DESCRIPTION = New Global.System.Data.DataColumn("LANG6_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLANG6_DESCRIPTION)
            Me.columnCREATEDATE = New Global.System.Data.DataColumn("CREATEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDATE)
            Me.columnONPROCESS = New Global.System.Data.DataColumn("ONPROCESS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONPROCESS)
            Me.columnRELEASE_DATE = New Global.System.Data.DataColumn("RELEASE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRELEASE_DATE)
            Me.columnONBARGAIN = New Global.System.Data.DataColumn("ONBARGAIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONBARGAIN)
            Me.columnONAUCTION = New Global.System.Data.DataColumn("ONAUCTION", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONAUCTION)
            Me.columnONFEATURED = New Global.System.Data.DataColumn("ONFEATURED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONFEATURED)
            Me.columnONSPECIAL = New Global.System.Data.DataColumn("ONSPECIAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONSPECIAL)
            Me.columnONEBAY = New Global.System.Data.DataColumn("ONEBAY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONEBAY)
            Me.columnEBAYID = New Global.System.Data.DataColumn("EBAYID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEBAYID)
            Me.columnONSPECIAL_FROM_DATE = New Global.System.Data.DataColumn("ONSPECIAL_FROM_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONSPECIAL_FROM_DATE)
            Me.columnONSPECIAL_TO_DATE = New Global.System.Data.DataColumn("ONSPECIAL_TO_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnONSPECIAL_TO_DATE)
            Me.columnQTYONSTOCK_CUR = New Global.System.Data.DataColumn("QTYONSTOCK_CUR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTYONSTOCK_CUR)
            Me.columnQTYONSTOCK_MIN = New Global.System.Data.DataColumn("QTYONSTOCK_MIN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTYONSTOCK_MIN)
            Me.columnPURCHASE_PRICE = New Global.System.Data.DataColumn("PURCHASE_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPURCHASE_PRICE)
            Me.columnAPPRAISAL_PRICE = New Global.System.Data.DataColumn("APPRAISAL_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPRAISAL_PRICE)
            Me.columnDEALER_PRICE = New Global.System.Data.DataColumn("DEALER_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEALER_PRICE)
            Me.columnSELL_PRICE = New Global.System.Data.DataColumn("SELL_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSELL_PRICE)
            Me.columnSPECIAL_SELL_PRICE = New Global.System.Data.DataColumn("SPECIAL_SELL_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIAL_SELL_PRICE)
            Me.columnSPECIAL_DEALER_PRICE = New Global.System.Data.DataColumn("SPECIAL_DEALER_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIAL_DEALER_PRICE)
            Me.columnAUCTION_PRICE = New Global.System.Data.DataColumn("AUCTION_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUCTION_PRICE)
            Me.columnNOTES = New Global.System.Data.DataColumn("NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTES)
            Me.columnICON_NAME = New Global.System.Data.DataColumn("ICON_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnICON_NAME)
            Me.columnPICTURE_NAME = New Global.System.Data.DataColumn("PICTURE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICTURE_NAME)
            Me.columnPICTURE_HIRES_NAME = New Global.System.Data.DataColumn("PICTURE_HIRES_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICTURE_HIRES_NAME)
            Me.columnCERTIFICATE_NAME = New Global.System.Data.DataColumn("CERTIFICATE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATE_NAME)
            Me.columnMOVIE_NAME = New Global.System.Data.DataColumn("MOVIE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIE_NAME)
            Me.columnGALLERY_NAME = New Global.System.Data.DataColumn("GALLERY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGALLERY_NAME)
            Me.columnBANNER_NAME = New Global.System.Data.DataColumn("BANNER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANNER_NAME)
            Me.columnLASTMODIFY_DATE = New Global.System.Data.DataColumn("LASTMODIFY_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLASTMODIFY_DATE)
            Me.columnLASTMODIFY_USER = New Global.System.Data.DataColumn("LASTMODIFY_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLASTMODIFY_USER)
            Me.columnLASTMODIFY_USER_ID = New Global.System.Data.DataColumn("LASTMODIFY_USER_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLASTMODIFY_USER_ID)
            Me.columnINDEXWORDS = New Global.System.Data.DataColumn("INDEXWORDS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDEXWORDS)
            Me.columnREMARKS = New Global.System.Data.DataColumn("REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARKS)
            Me.columnCLUB_ITEM = New Global.System.Data.DataColumn("CLUB_ITEM", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLUB_ITEM)
            Me.columnAUTOGENERATED = New Global.System.Data.DataColumn("AUTOGENERATED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTOGENERATED)
            Me.columnITEM_SOLD = New Global.System.Data.DataColumn("ITEM_SOLD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_SOLD)
            Me.columnSIMILAR_ITEMS = New Global.System.Data.DataColumn("SIMILAR_ITEMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIMILAR_ITEMS)
            Me.columnsamplepic = New Global.System.Data.DataColumn("samplepic", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsamplepic)
            Me.columnsmartsort = New Global.System.Data.DataColumn("smartsort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsmartsort)
            Me.columnopthash = New Global.System.Data.DataColumn("opthash", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnopthash)
            Me.columnHAS_WHITE_GOLD = New Global.System.Data.DataColumn("HAS_WHITE_GOLD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHAS_WHITE_GOLD)
            Me.columnHAS_YELLOW_GOLD = New Global.System.Data.DataColumn("HAS_YELLOW_GOLD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHAS_YELLOW_GOLD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AutoIncrement = True
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = False
            Me.columnID.ReadOnly = True
            Me.columnID.Unique = True
            Me.columnPLATETYPE.AllowDBNull = False
            Me.columnCATEGORY_ID.AllowDBNull = False
            Me.columnSUBCATEGORY_ID.AllowDBNull = False
            Me.columnLOCATION_ID.AllowDBNull = False
            Me.columnBRANCHNUMBER.AllowDBNull = False
            Me.columnSUPPLIERNUMBER.AllowDBNull = False
            Me.columnITEMNUMBERINT.AllowDBNull = False
            Me.columnITEMNUMBER.MaxLength = 20
            Me.columnITEMCODE.MaxLength = 20
            Me.columnLANG1_DESCRIPTION.MaxLength = 200
            Me.columnLANG2_DESCRIPTION.MaxLength = 200
            Me.columnLANG3_DESCRIPTION.MaxLength = 200
            Me.columnLANG4_DESCRIPTION.MaxLength = 200
            Me.columnLANG5_DESCRIPTION.MaxLength = 200
            Me.columnLANG6_DESCRIPTION.MaxLength = 200
            Me.columnEBAYID.MaxLength = 20
            Me.columnNOTES.MaxLength = 2147483647
            Me.columnICON_NAME.MaxLength = 150
            Me.columnPICTURE_NAME.MaxLength = 150
            Me.columnPICTURE_HIRES_NAME.MaxLength = 150
            Me.columnCERTIFICATE_NAME.MaxLength = 150
            Me.columnMOVIE_NAME.MaxLength = 150
            Me.columnGALLERY_NAME.MaxLength = 150
            Me.columnBANNER_NAME.MaxLength = 150
            Me.columnLASTMODIFY_USER.MaxLength = 50
            Me.columnLASTMODIFY_USER_ID.AllowDBNull = False
            Me.columnINDEXWORDS.MaxLength = 250
            Me.columnREMARKS.MaxLength = 2147483647
            Me.columnSIMILAR_ITEMS.MaxLength = 250
            Me.columnsmartsort.AllowDBNull = False
            Me.columnsmartsort.MaxLength = 100
            Me.columnopthash.AllowDBNull = False
            Me.columnopthash.MaxLength = 1000
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Newinv_INVENTORYRow() As inv_INVENTORYRow
            Return CType(Me.NewRow, inv_INVENTORYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New inv_INVENTORYRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(inv_INVENTORYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.inv_INVENTORYRowChangedEvent) Is Nothing) Then
                RaiseEvent inv_INVENTORYRowChanged(Me, New inv_INVENTORYRowChangeEvent(CType(e.Row, inv_INVENTORYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.inv_INVENTORYRowChangingEvent) Is Nothing) Then
                RaiseEvent inv_INVENTORYRowChanging(Me, New inv_INVENTORYRowChangeEvent(CType(e.Row, inv_INVENTORYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.inv_INVENTORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent inv_INVENTORYRowDeleted(Me, New inv_INVENTORYRowChangeEvent(CType(e.Row, inv_INVENTORYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.inv_INVENTORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent inv_INVENTORYRowDeleting(Me, New inv_INVENTORYRowChangeEvent(CType(e.Row, inv_INVENTORYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Removeinv_INVENTORYRow(ByVal row As inv_INVENTORYRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As inventory = New inventory()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "inv_INVENTORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class inv_INVENTORYRow
        Inherits Global.System.Data.DataRow

        Private tableinv_INVENTORY As inv_INVENTORYDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableinv_INVENTORY = CType(Me.Table, inv_INVENTORYDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PLATETYPE() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.PLATETYPEColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.PLATETYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CATEGORY_ID() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.CATEGORY_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.CATEGORY_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SUBCATEGORY_ID() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.SUBCATEGORY_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.SUBCATEGORY_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LOCATION_ID() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.LOCATION_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.LOCATION_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BRANCHNUMBER() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.BRANCHNUMBERColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.BRANCHNUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SUPPLIERNUMBER() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.SUPPLIERNUMBERColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.SUPPLIERNUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMNUMBERINT() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.ITEMNUMBERINTColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.ITEMNUMBERINTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMNUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ITEMNUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNUMBER' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.ITEMNUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ITEMCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.ITEMCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SHOPSTATUS() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.SHOPSTATUSColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOPSTATUS' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.SHOPSTATUSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEMDELETED() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ITEMDELETEDColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMDELETED' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ITEMDELETEDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NO_ORDERALONE() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.NO_ORDERALONEColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_ORDERALONE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.NO_ORDERALONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NO_PUBLICAUCTION() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.NO_PUBLICAUCTIONColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_PUBLICAUCTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.NO_PUBLICAUCTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STATUS_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.STATUS_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS_ID' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.STATUS_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LANG1_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LANG1_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LANG1_DESCRIPTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.LANG1_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LANG2_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LANG2_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LANG2_DESCRIPTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.LANG2_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LANG3_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LANG3_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LANG3_DESCRIPTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.LANG3_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LANG4_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LANG4_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LANG4_DESCRIPTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.LANG4_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LANG5_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LANG5_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LANG5_DESCRIPTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.LANG5_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LANG6_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LANG6_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LANG6_DESCRIPTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.LANG6_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATEDATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.CREATEDATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATEDATE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableinv_INVENTORY.CREATEDATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONPROCESS() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONPROCESSColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONPROCESS' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ONPROCESSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RELEASE_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.RELEASE_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RELEASE_DATE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableinv_INVENTORY.RELEASE_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONBARGAIN() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONBARGAINColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONBARGAIN' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ONBARGAINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONAUCTION() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONAUCTIONColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONAUCTION' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ONAUCTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONFEATURED() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONFEATUREDColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONFEATURED' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ONFEATUREDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONSPECIAL() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONSPECIALColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONSPECIAL' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ONSPECIALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONEBAY() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONEBAYColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONEBAY' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ONEBAYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EBAYID() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.EBAYIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EBAYID' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.EBAYIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONSPECIAL_FROM_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONSPECIAL_FROM_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONSPECIAL_FROM_DATE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableinv_INVENTORY.ONSPECIAL_FROM_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ONSPECIAL_TO_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ONSPECIAL_TO_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ONSPECIAL_TO_DATE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableinv_INVENTORY.ONSPECIAL_TO_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QTYONSTOCK_CUR() As Integer
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.QTYONSTOCK_CURColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTYONSTOCK_CUR' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.QTYONSTOCK_CURColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QTYONSTOCK_MIN() As Integer
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.QTYONSTOCK_MINColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTYONSTOCK_MIN' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.QTYONSTOCK_MINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PURCHASE_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.PURCHASE_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PURCHASE_PRICE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableinv_INVENTORY.PURCHASE_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APPRAISAL_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.APPRAISAL_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPRAISAL_PRICE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableinv_INVENTORY.APPRAISAL_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DEALER_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.DEALER_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEALER_PRICE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableinv_INVENTORY.DEALER_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SELL_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.SELL_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SELL_PRICE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableinv_INVENTORY.SELL_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPECIAL_SELL_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.SPECIAL_SELL_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECIAL_SELL_PRICE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableinv_INVENTORY.SPECIAL_SELL_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPECIAL_DEALER_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.SPECIAL_DEALER_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECIAL_DEALER_PRICE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableinv_INVENTORY.SPECIAL_DEALER_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AUCTION_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.AUCTION_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUCTION_PRICE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableinv_INVENTORY.AUCTION_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOTES() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.NOTESColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTES' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.NOTESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ICON_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ICON_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ICON_NAME' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.ICON_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PICTURE_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.PICTURE_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICTURE_NAME' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.PICTURE_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PICTURE_HIRES_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.PICTURE_HIRES_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICTURE_HIRES_NAME' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.PICTURE_HIRES_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CERTIFICATE_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.CERTIFICATE_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERTIFICATE_NAME' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.CERTIFICATE_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOVIE_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.MOVIE_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOVIE_NAME' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.MOVIE_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GALLERY_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.GALLERY_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GALLERY_NAME' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.GALLERY_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BANNER_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.BANNER_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANNER_NAME' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.BANNER_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LASTMODIFY_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LASTMODIFY_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LASTMODIFY_DATE' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableinv_INVENTORY.LASTMODIFY_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LASTMODIFY_USER() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.LASTMODIFY_USERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LASTMODIFY_USER' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.LASTMODIFY_USERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LASTMODIFY_USER_ID() As Integer
            Get
                Return CType(Me(Me.tableinv_INVENTORY.LASTMODIFY_USER_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableinv_INVENTORY.LASTMODIFY_USER_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INDEXWORDS() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.INDEXWORDSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDEXWORDS' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.INDEXWORDSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REMARKS() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.REMARKSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARKS' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.REMARKSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CLUB_ITEM() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.CLUB_ITEMColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLUB_ITEM' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.CLUB_ITEMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AUTOGENERATED() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.AUTOGENERATEDColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTOGENERATED' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.AUTOGENERATEDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEM_SOLD() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.ITEM_SOLDColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEM_SOLD' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.ITEM_SOLDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SIMILAR_ITEMS() As String
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.SIMILAR_ITEMSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIMILAR_ITEMS' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.SIMILAR_ITEMSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property samplepic() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.samplepicColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'samplepic' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.samplepicColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property smartsort() As String
            Get
                Return CType(Me(Me.tableinv_INVENTORY.smartsortColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.smartsortColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property opthash() As String
            Get
                Return CType(Me(Me.tableinv_INVENTORY.opthashColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableinv_INVENTORY.opthashColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HAS_WHITE_GOLD() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.HAS_WHITE_GOLDColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HAS_WHITE_GOLD' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.HAS_WHITE_GOLDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HAS_YELLOW_GOLD() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableinv_INVENTORY.HAS_YELLOW_GOLDColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HAS_YELLOW_GOLD' in table 'inv_INVENTORY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableinv_INVENTORY.HAS_YELLOW_GOLDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsITEMNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ITEMNUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetITEMNUMBERNull()
            Me(Me.tableinv_INVENTORY.ITEMNUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ITEMCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetITEMCODENull()
            Me(Me.tableinv_INVENTORY.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSHOPSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.SHOPSTATUSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSHOPSTATUSNull()
            Me(Me.tableinv_INVENTORY.SHOPSTATUSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsITEMDELETEDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ITEMDELETEDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetITEMDELETEDNull()
            Me(Me.tableinv_INVENTORY.ITEMDELETEDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNO_ORDERALONENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.NO_ORDERALONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNO_ORDERALONENull()
            Me(Me.tableinv_INVENTORY.NO_ORDERALONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNO_PUBLICAUCTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.NO_PUBLICAUCTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNO_PUBLICAUCTIONNull()
            Me(Me.tableinv_INVENTORY.NO_PUBLICAUCTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTATUS_IDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.STATUS_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTATUS_IDNull()
            Me(Me.tableinv_INVENTORY.STATUS_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLANG1_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LANG1_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLANG1_DESCRIPTIONNull()
            Me(Me.tableinv_INVENTORY.LANG1_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLANG2_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LANG2_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLANG2_DESCRIPTIONNull()
            Me(Me.tableinv_INVENTORY.LANG2_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLANG3_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LANG3_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLANG3_DESCRIPTIONNull()
            Me(Me.tableinv_INVENTORY.LANG3_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLANG4_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LANG4_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLANG4_DESCRIPTIONNull()
            Me(Me.tableinv_INVENTORY.LANG4_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLANG5_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LANG5_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLANG5_DESCRIPTIONNull()
            Me(Me.tableinv_INVENTORY.LANG5_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLANG6_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LANG6_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLANG6_DESCRIPTIONNull()
            Me(Me.tableinv_INVENTORY.LANG6_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREATEDATENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.CREATEDATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREATEDATENull()
            Me(Me.tableinv_INVENTORY.CREATEDATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONPROCESSNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONPROCESSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONPROCESSNull()
            Me(Me.tableinv_INVENTORY.ONPROCESSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRELEASE_DATENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.RELEASE_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRELEASE_DATENull()
            Me(Me.tableinv_INVENTORY.RELEASE_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONBARGAINNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONBARGAINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONBARGAINNull()
            Me(Me.tableinv_INVENTORY.ONBARGAINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONAUCTIONNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONAUCTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONAUCTIONNull()
            Me(Me.tableinv_INVENTORY.ONAUCTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONFEATUREDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONFEATUREDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONFEATUREDNull()
            Me(Me.tableinv_INVENTORY.ONFEATUREDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONSPECIALNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONSPECIALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONSPECIALNull()
            Me(Me.tableinv_INVENTORY.ONSPECIALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONEBAYNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONEBAYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONEBAYNull()
            Me(Me.tableinv_INVENTORY.ONEBAYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEBAYIDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.EBAYIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEBAYIDNull()
            Me(Me.tableinv_INVENTORY.EBAYIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONSPECIAL_FROM_DATENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONSPECIAL_FROM_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONSPECIAL_FROM_DATENull()
            Me(Me.tableinv_INVENTORY.ONSPECIAL_FROM_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsONSPECIAL_TO_DATENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ONSPECIAL_TO_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetONSPECIAL_TO_DATENull()
            Me(Me.tableinv_INVENTORY.ONSPECIAL_TO_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQTYONSTOCK_CURNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.QTYONSTOCK_CURColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQTYONSTOCK_CURNull()
            Me(Me.tableinv_INVENTORY.QTYONSTOCK_CURColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQTYONSTOCK_MINNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.QTYONSTOCK_MINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQTYONSTOCK_MINNull()
            Me(Me.tableinv_INVENTORY.QTYONSTOCK_MINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPURCHASE_PRICENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.PURCHASE_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPURCHASE_PRICENull()
            Me(Me.tableinv_INVENTORY.PURCHASE_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAPPRAISAL_PRICENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.APPRAISAL_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAPPRAISAL_PRICENull()
            Me(Me.tableinv_INVENTORY.APPRAISAL_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDEALER_PRICENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.DEALER_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDEALER_PRICENull()
            Me(Me.tableinv_INVENTORY.DEALER_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSELL_PRICENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.SELL_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSELL_PRICENull()
            Me(Me.tableinv_INVENTORY.SELL_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPECIAL_SELL_PRICENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.SPECIAL_SELL_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPECIAL_SELL_PRICENull()
            Me(Me.tableinv_INVENTORY.SPECIAL_SELL_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPECIAL_DEALER_PRICENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.SPECIAL_DEALER_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPECIAL_DEALER_PRICENull()
            Me(Me.tableinv_INVENTORY.SPECIAL_DEALER_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAUCTION_PRICENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.AUCTION_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAUCTION_PRICENull()
            Me(Me.tableinv_INVENTORY.AUCTION_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOTESNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.NOTESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOTESNull()
            Me(Me.tableinv_INVENTORY.NOTESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsICON_NAMENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ICON_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetICON_NAMENull()
            Me(Me.tableinv_INVENTORY.ICON_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPICTURE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.PICTURE_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPICTURE_NAMENull()
            Me(Me.tableinv_INVENTORY.PICTURE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPICTURE_HIRES_NAMENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.PICTURE_HIRES_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPICTURE_HIRES_NAMENull()
            Me(Me.tableinv_INVENTORY.PICTURE_HIRES_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCERTIFICATE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.CERTIFICATE_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCERTIFICATE_NAMENull()
            Me(Me.tableinv_INVENTORY.CERTIFICATE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOVIE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.MOVIE_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOVIE_NAMENull()
            Me(Me.tableinv_INVENTORY.MOVIE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGALLERY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.GALLERY_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGALLERY_NAMENull()
            Me(Me.tableinv_INVENTORY.GALLERY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBANNER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.BANNER_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBANNER_NAMENull()
            Me(Me.tableinv_INVENTORY.BANNER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLASTMODIFY_DATENull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LASTMODIFY_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLASTMODIFY_DATENull()
            Me(Me.tableinv_INVENTORY.LASTMODIFY_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLASTMODIFY_USERNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.LASTMODIFY_USERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLASTMODIFY_USERNull()
            Me(Me.tableinv_INVENTORY.LASTMODIFY_USERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINDEXWORDSNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.INDEXWORDSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINDEXWORDSNull()
            Me(Me.tableinv_INVENTORY.INDEXWORDSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREMARKSNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.REMARKSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREMARKSNull()
            Me(Me.tableinv_INVENTORY.REMARKSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCLUB_ITEMNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.CLUB_ITEMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCLUB_ITEMNull()
            Me(Me.tableinv_INVENTORY.CLUB_ITEMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAUTOGENERATEDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.AUTOGENERATEDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAUTOGENERATEDNull()
            Me(Me.tableinv_INVENTORY.AUTOGENERATEDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsITEM_SOLDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.ITEM_SOLDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetITEM_SOLDNull()
            Me(Me.tableinv_INVENTORY.ITEM_SOLDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSIMILAR_ITEMSNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.SIMILAR_ITEMSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSIMILAR_ITEMSNull()
            Me(Me.tableinv_INVENTORY.SIMILAR_ITEMSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IssamplepicNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.samplepicColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetsamplepicNull()
            Me(Me.tableinv_INVENTORY.samplepicColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHAS_WHITE_GOLDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.HAS_WHITE_GOLDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHAS_WHITE_GOLDNull()
            Me(Me.tableinv_INVENTORY.HAS_WHITE_GOLDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHAS_YELLOW_GOLDNull() As Boolean
            Return Me.IsNull(Me.tableinv_INVENTORY.HAS_YELLOW_GOLDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHAS_YELLOW_GOLDNull()
            Me(Me.tableinv_INVENTORY.HAS_YELLOW_GOLDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class inv_INVENTORYRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As inv_INVENTORYRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As inv_INVENTORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As inv_INVENTORYRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace inventoryTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class inv_INVENTORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "inv_INVENTORY"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("PLATETYPE", "PLATETYPE")
            tableMapping.ColumnMappings.Add("CATEGORY_ID", "CATEGORY_ID")
            tableMapping.ColumnMappings.Add("SUBCATEGORY_ID", "SUBCATEGORY_ID")
            tableMapping.ColumnMappings.Add("LOCATION_ID", "LOCATION_ID")
            tableMapping.ColumnMappings.Add("BRANCHNUMBER", "BRANCHNUMBER")
            tableMapping.ColumnMappings.Add("SUPPLIERNUMBER", "SUPPLIERNUMBER")
            tableMapping.ColumnMappings.Add("ITEMNUMBERINT", "ITEMNUMBERINT")
            tableMapping.ColumnMappings.Add("ITEMNUMBER", "ITEMNUMBER")
            tableMapping.ColumnMappings.Add("ITEMCODE", "ITEMCODE")
            tableMapping.ColumnMappings.Add("SHOPSTATUS", "SHOPSTATUS")
            tableMapping.ColumnMappings.Add("ITEMDELETED", "ITEMDELETED")
            tableMapping.ColumnMappings.Add("NO_ORDERALONE", "NO_ORDERALONE")
            tableMapping.ColumnMappings.Add("NO_PUBLICAUCTION", "NO_PUBLICAUCTION")
            tableMapping.ColumnMappings.Add("STATUS_ID", "STATUS_ID")
            tableMapping.ColumnMappings.Add("LANG1_DESCRIPTION", "LANG1_DESCRIPTION")
            tableMapping.ColumnMappings.Add("LANG2_DESCRIPTION", "LANG2_DESCRIPTION")
            tableMapping.ColumnMappings.Add("LANG3_DESCRIPTION", "LANG3_DESCRIPTION")
            tableMapping.ColumnMappings.Add("LANG4_DESCRIPTION", "LANG4_DESCRIPTION")
            tableMapping.ColumnMappings.Add("LANG5_DESCRIPTION", "LANG5_DESCRIPTION")
            tableMapping.ColumnMappings.Add("LANG6_DESCRIPTION", "LANG6_DESCRIPTION")
            tableMapping.ColumnMappings.Add("CREATEDATE", "CREATEDATE")
            tableMapping.ColumnMappings.Add("ONPROCESS", "ONPROCESS")
            tableMapping.ColumnMappings.Add("RELEASE_DATE", "RELEASE_DATE")
            tableMapping.ColumnMappings.Add("ONBARGAIN", "ONBARGAIN")
            tableMapping.ColumnMappings.Add("ONAUCTION", "ONAUCTION")
            tableMapping.ColumnMappings.Add("ONFEATURED", "ONFEATURED")
            tableMapping.ColumnMappings.Add("ONSPECIAL", "ONSPECIAL")
            tableMapping.ColumnMappings.Add("ONEBAY", "ONEBAY")
            tableMapping.ColumnMappings.Add("EBAYID", "EBAYID")
            tableMapping.ColumnMappings.Add("ONSPECIAL_FROM_DATE", "ONSPECIAL_FROM_DATE")
            tableMapping.ColumnMappings.Add("ONSPECIAL_TO_DATE", "ONSPECIAL_TO_DATE")
            tableMapping.ColumnMappings.Add("QTYONSTOCK_CUR", "QTYONSTOCK_CUR")
            tableMapping.ColumnMappings.Add("QTYONSTOCK_MIN", "QTYONSTOCK_MIN")
            tableMapping.ColumnMappings.Add("PURCHASE_PRICE", "PURCHASE_PRICE")
            tableMapping.ColumnMappings.Add("APPRAISAL_PRICE", "APPRAISAL_PRICE")
            tableMapping.ColumnMappings.Add("DEALER_PRICE", "DEALER_PRICE")
            tableMapping.ColumnMappings.Add("SELL_PRICE", "SELL_PRICE")
            tableMapping.ColumnMappings.Add("SPECIAL_SELL_PRICE", "SPECIAL_SELL_PRICE")
            tableMapping.ColumnMappings.Add("SPECIAL_DEALER_PRICE", "SPECIAL_DEALER_PRICE")
            tableMapping.ColumnMappings.Add("AUCTION_PRICE", "AUCTION_PRICE")
            tableMapping.ColumnMappings.Add("NOTES", "NOTES")
            tableMapping.ColumnMappings.Add("ICON_NAME", "ICON_NAME")
            tableMapping.ColumnMappings.Add("PICTURE_NAME", "PICTURE_NAME")
            tableMapping.ColumnMappings.Add("PICTURE_HIRES_NAME", "PICTURE_HIRES_NAME")
            tableMapping.ColumnMappings.Add("CERTIFICATE_NAME", "CERTIFICATE_NAME")
            tableMapping.ColumnMappings.Add("MOVIE_NAME", "MOVIE_NAME")
            tableMapping.ColumnMappings.Add("GALLERY_NAME", "GALLERY_NAME")
            tableMapping.ColumnMappings.Add("BANNER_NAME", "BANNER_NAME")
            tableMapping.ColumnMappings.Add("LASTMODIFY_DATE", "LASTMODIFY_DATE")
            tableMapping.ColumnMappings.Add("LASTMODIFY_USER", "LASTMODIFY_USER")
            tableMapping.ColumnMappings.Add("LASTMODIFY_USER_ID", "LASTMODIFY_USER_ID")
            tableMapping.ColumnMappings.Add("INDEXWORDS", "INDEXWORDS")
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS")
            tableMapping.ColumnMappings.Add("CLUB_ITEM", "CLUB_ITEM")
            tableMapping.ColumnMappings.Add("AUTOGENERATED", "AUTOGENERATED")
            tableMapping.ColumnMappings.Add("ITEM_SOLD", "ITEM_SOLD")
            tableMapping.ColumnMappings.Add("SIMILAR_ITEMS", "SIMILAR_ITEMS")
            tableMapping.ColumnMappings.Add("samplepic", "samplepic")
            tableMapping.ColumnMappings.Add("smartsort", "smartsort")
            tableMapping.ColumnMappings.Add("opthash", "opthash")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[inv_INVENTORY] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[inv_INVENTORY] ([PLATETYPE], [CATEGORY_ID], [SUBCATEGORY_ID], "& _ 
                "[LOCATION_ID], [BRANCHNUMBER], [SUPPLIERNUMBER], [ITEMNUMBERINT], [ITEMNUMBER], "& _ 
                "[ITEMCODE], [SHOPSTATUS], [ITEMDELETED], [NO_ORDERALONE], [NO_PUBLICAUCTION], [S"& _ 
                "TATUS_ID], [LANG1_DESCRIPTION], [LANG2_DESCRIPTION], [LANG3_DESCRIPTION], [LANG4"& _ 
                "_DESCRIPTION], [LANG5_DESCRIPTION], [LANG6_DESCRIPTION], [CREATEDATE], [ONPROCES"& _ 
                "S], [RELEASE_DATE], [ONBARGAIN], [ONAUCTION], [ONFEATURED], [ONSPECIAL], [ONEBAY"& _ 
                "], [EBAYID], [ONSPECIAL_FROM_DATE], [ONSPECIAL_TO_DATE], [QTYONSTOCK_CUR], [QTYO"& _ 
                "NSTOCK_MIN], [PURCHASE_PRICE], [APPRAISAL_PRICE], [DEALER_PRICE], [SELL_PRICE], "& _ 
                "[SPECIAL_SELL_PRICE], [SPECIAL_DEALER_PRICE], [AUCTION_PRICE], [NOTES], [ICON_NA"& _ 
                "ME], [PICTURE_NAME], [PICTURE_HIRES_NAME], [CERTIFICATE_NAME], [MOVIE_NAME], [GA"& _ 
                "LLERY_NAME], [BANNER_NAME], [LASTMODIFY_DATE], [LASTMODIFY_USER], [LASTMODIFY_US"& _ 
                "ER_ID], [INDEXWORDS], [REMARKS], [CLUB_ITEM], [AUTOGENERATED], [ITEM_SOLD], [SIM"& _ 
                "ILAR_ITEMS], [samplepic], [smartsort], [opthash]) VALUES (@PLATETYPE, @CATEGORY_"& _ 
                "ID, @SUBCATEGORY_ID, @LOCATION_ID, @BRANCHNUMBER, @SUPPLIERNUMBER, @ITEMNUMBERIN"& _ 
                "T, @ITEMNUMBER, @ITEMCODE, @SHOPSTATUS, @ITEMDELETED, @NO_ORDERALONE, @NO_PUBLIC"& _ 
                "AUCTION, @STATUS_ID, @LANG1_DESCRIPTION, @LANG2_DESCRIPTION, @LANG3_DESCRIPTION,"& _ 
                " @LANG4_DESCRIPTION, @LANG5_DESCRIPTION, @LANG6_DESCRIPTION, @CREATEDATE, @ONPRO"& _ 
                "CESS, @RELEASE_DATE, @ONBARGAIN, @ONAUCTION, @ONFEATURED, @ONSPECIAL, @ONEBAY, @"& _ 
                "EBAYID, @ONSPECIAL_FROM_DATE, @ONSPECIAL_TO_DATE, @QTYONSTOCK_CUR, @QTYONSTOCK_M"& _ 
                "IN, @PURCHASE_PRICE, @APPRAISAL_PRICE, @DEALER_PRICE, @SELL_PRICE, @SPECIAL_SELL"& _ 
                "_PRICE, @SPECIAL_DEALER_PRICE, @AUCTION_PRICE, @NOTES, @ICON_NAME, @PICTURE_NAME"& _ 
                ", @PICTURE_HIRES_NAME, @CERTIFICATE_NAME, @MOVIE_NAME, @GALLERY_NAME, @BANNER_NA"& _ 
                "ME, @LASTMODIFY_DATE, @LASTMODIFY_USER, @LASTMODIFY_USER_ID, @INDEXWORDS, @REMAR"& _ 
                "KS, @CLUB_ITEM, @AUTOGENERATED, @ITEM_SOLD, @SIMILAR_ITEMS, @samplepic, @smartso"& _ 
                "rt, @opthash)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLATETYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLATETYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CATEGORY_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CATEGORY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCATEGORY_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCATEGORY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRANCHNUMBER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRANCHNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPPLIERNUMBER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPPLIERNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMNUMBERINT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMNUMBERINT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMNUMBER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHOPSTATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHOPSTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMDELETED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMDELETED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_ORDERALONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_ORDERALONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_PUBLICAUCTION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_PUBLICAUCTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG1_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG1_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG2_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG2_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG3_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG3_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG4_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG4_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG5_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG5_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG6_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG6_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONPROCESS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONPROCESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RELEASE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RELEASE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONBARGAIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONBARGAIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONAUCTION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONAUCTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONFEATURED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONFEATURED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONSPECIAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONSPECIAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONEBAY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONEBAY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EBAYID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EBAYID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONSPECIAL_FROM_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONSPECIAL_FROM_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONSPECIAL_TO_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONSPECIAL_TO_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QTYONSTOCK_CUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTYONSTOCK_CUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QTYONSTOCK_MIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTYONSTOCK_MIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PURCHASE_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PURCHASE_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APPRAISAL_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPRAISAL_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEALER_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEALER_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SELL_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SELL_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPECIAL_SELL_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPECIAL_SELL_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPECIAL_DEALER_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPECIAL_DEALER_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUCTION_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUCTION_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ICON_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ICON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICTURE_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICTURE_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICTURE_HIRES_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICTURE_HIRES_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CERTIFICATE_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CERTIFICATE_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOVIE_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOVIE_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GALLERY_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GALLERY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BANNER_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BANNER_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LASTMODIFY_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LASTMODIFY_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LASTMODIFY_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LASTMODIFY_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LASTMODIFY_USER_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LASTMODIFY_USER_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INDEXWORDS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INDEXWORDS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REMARKS", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLUB_ITEM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLUB_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTOGENERATED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTOGENERATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_SOLD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SOLD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIMILAR_ITEMS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMILAR_ITEMS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@samplepic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "samplepic", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@smartsort", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "smartsort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@opthash", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "opthash", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[inv_INVENTORY] SET [PLATETYPE] = @PLATETYPE, [CATEGORY_ID] = @CATEG"& _ 
                "ORY_ID, [SUBCATEGORY_ID] = @SUBCATEGORY_ID, [LOCATION_ID] = @LOCATION_ID, [BRANC"& _ 
                "HNUMBER] = @BRANCHNUMBER, [SUPPLIERNUMBER] = @SUPPLIERNUMBER, [ITEMNUMBERINT] = "& _ 
                "@ITEMNUMBERINT, [ITEMNUMBER] = @ITEMNUMBER, [ITEMCODE] = @ITEMCODE, [SHOPSTATUS]"& _ 
                " = @SHOPSTATUS, [ITEMDELETED] = @ITEMDELETED, [NO_ORDERALONE] = @NO_ORDERALONE, "& _ 
                "[NO_PUBLICAUCTION] = @NO_PUBLICAUCTION, [STATUS_ID] = @STATUS_ID, [LANG1_DESCRIP"& _ 
                "TION] = @LANG1_DESCRIPTION, [LANG2_DESCRIPTION] = @LANG2_DESCRIPTION, [LANG3_DES"& _ 
                "CRIPTION] = @LANG3_DESCRIPTION, [LANG4_DESCRIPTION] = @LANG4_DESCRIPTION, [LANG5"& _ 
                "_DESCRIPTION] = @LANG5_DESCRIPTION, [LANG6_DESCRIPTION] = @LANG6_DESCRIPTION, [C"& _ 
                "REATEDATE] = @CREATEDATE, [ONPROCESS] = @ONPROCESS, [RELEASE_DATE] = @RELEASE_DA"& _ 
                "TE, [ONBARGAIN] = @ONBARGAIN, [ONAUCTION] = @ONAUCTION, [ONFEATURED] = @ONFEATUR"& _ 
                "ED, [ONSPECIAL] = @ONSPECIAL, [ONEBAY] = @ONEBAY, [EBAYID] = @EBAYID, [ONSPECIAL"& _ 
                "_FROM_DATE] = @ONSPECIAL_FROM_DATE, [ONSPECIAL_TO_DATE] = @ONSPECIAL_TO_DATE, [Q"& _ 
                "TYONSTOCK_CUR] = @QTYONSTOCK_CUR, [QTYONSTOCK_MIN] = @QTYONSTOCK_MIN, [PURCHASE_"& _ 
                "PRICE] = @PURCHASE_PRICE, [APPRAISAL_PRICE] = @APPRAISAL_PRICE, [DEALER_PRICE] ="& _ 
                " @DEALER_PRICE, [SELL_PRICE] = @SELL_PRICE, [SPECIAL_SELL_PRICE] = @SPECIAL_SELL"& _ 
                "_PRICE, [SPECIAL_DEALER_PRICE] = @SPECIAL_DEALER_PRICE, [AUCTION_PRICE] = @AUCTI"& _ 
                "ON_PRICE, [NOTES] = @NOTES, [ICON_NAME] = @ICON_NAME, [PICTURE_NAME] = @PICTURE_"& _ 
                "NAME, [PICTURE_HIRES_NAME] = @PICTURE_HIRES_NAME, [CERTIFICATE_NAME] = @CERTIFIC"& _ 
                "ATE_NAME, [MOVIE_NAME] = @MOVIE_NAME, [GALLERY_NAME] = @GALLERY_NAME, [BANNER_NA"& _ 
                "ME] = @BANNER_NAME, [LASTMODIFY_DATE] = @LASTMODIFY_DATE, [LASTMODIFY_USER] = @L"& _ 
                "ASTMODIFY_USER, [LASTMODIFY_USER_ID] = @LASTMODIFY_USER_ID, [INDEXWORDS] = @INDE"& _ 
                "XWORDS, [REMARKS] = @REMARKS, [CLUB_ITEM] = @CLUB_ITEM, [AUTOGENERATED] = @AUTOG"& _ 
                "ENERATED, [ITEM_SOLD] = @ITEM_SOLD, [SIMILAR_ITEMS] = @SIMILAR_ITEMS, [samplepic"& _ 
                "] = @samplepic, [smartsort] = @smartsort, [opthash] = @opthash WHERE (([ID] = @O"& _ 
                "riginal_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLATETYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLATETYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CATEGORY_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CATEGORY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCATEGORY_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCATEGORY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOCATION_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRANCHNUMBER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRANCHNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPPLIERNUMBER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPPLIERNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMNUMBERINT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMNUMBERINT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMNUMBER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHOPSTATUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHOPSTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEMDELETED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEMDELETED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_ORDERALONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_ORDERALONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_PUBLICAUCTION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_PUBLICAUCTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG1_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG1_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG2_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG2_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG3_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG3_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG4_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG4_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG5_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG5_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LANG6_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LANG6_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONPROCESS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONPROCESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RELEASE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RELEASE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONBARGAIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONBARGAIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONAUCTION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONAUCTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONFEATURED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONFEATURED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONSPECIAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONSPECIAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONEBAY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONEBAY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EBAYID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EBAYID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONSPECIAL_FROM_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONSPECIAL_FROM_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ONSPECIAL_TO_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ONSPECIAL_TO_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QTYONSTOCK_CUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTYONSTOCK_CUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QTYONSTOCK_MIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTYONSTOCK_MIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PURCHASE_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PURCHASE_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APPRAISAL_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPRAISAL_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEALER_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEALER_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SELL_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SELL_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPECIAL_SELL_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPECIAL_SELL_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPECIAL_DEALER_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPECIAL_DEALER_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUCTION_PRICE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUCTION_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ICON_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ICON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICTURE_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICTURE_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICTURE_HIRES_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICTURE_HIRES_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CERTIFICATE_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CERTIFICATE_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOVIE_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOVIE_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GALLERY_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GALLERY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BANNER_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BANNER_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LASTMODIFY_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LASTMODIFY_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LASTMODIFY_USER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LASTMODIFY_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LASTMODIFY_USER_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LASTMODIFY_USER_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INDEXWORDS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INDEXWORDS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REMARKS", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLUB_ITEM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLUB_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTOGENERATED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTOGENERATED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ITEM_SOLD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ITEM_SOLD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIMILAR_ITEMS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMILAR_ITEMS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@samplepic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "samplepic", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@smartsort", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "smartsort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@opthash", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "opthash", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("JONetConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, PLATETYPE, CATEGORY_ID, SUBCATEGORY_ID, LOCATION_ID, BRANCHNUMBER, SUP"& _ 
                "PLIERNUMBER, ITEMNUMBERINT, ITEMNUMBER, ITEMCODE, SHOPSTATUS, ITEMDELETED, NO_OR"& _ 
                "DERALONE, NO_PUBLICAUCTION, STATUS_ID, LANG1_DESCRIPTION, LANG2_DESCRIPTION, LAN"& _ 
                "G3_DESCRIPTION, LANG4_DESCRIPTION, LANG5_DESCRIPTION, LANG6_DESCRIPTION, CREATED"& _ 
                "ATE, ONPROCESS, RELEASE_DATE, ONBARGAIN, ONAUCTION, ONFEATURED, ONSPECIAL, ONEBA"& _ 
                "Y, EBAYID, ONSPECIAL_FROM_DATE, ONSPECIAL_TO_DATE, QTYONSTOCK_CUR, QTYONSTOCK_MI"& _ 
                "N, PURCHASE_PRICE, APPRAISAL_PRICE, DEALER_PRICE, SELL_PRICE, SPECIAL_SELL_PRICE"& _ 
                ", SPECIAL_DEALER_PRICE, AUCTION_PRICE, NOTES, ICON_NAME, PICTURE_NAME, PICTURE_H"& _ 
                "IRES_NAME, CERTIFICATE_NAME, MOVIE_NAME, GALLERY_NAME, BANNER_NAME, LASTMODIFY_D"& _ 
                "ATE, LASTMODIFY_USER, LASTMODIFY_USER_ID, INDEXWORDS, REMARKS, CLUB_ITEM, AUTOGE"& _ 
                "NERATED, ITEM_SOLD, SIMILAR_ITEMS, samplepic, smartsort, opthash FROM dbo.inv_IN"& _ 
                "VENTORY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As inventory.inv_INVENTORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As inventory.inv_INVENTORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As inventory.inv_INVENTORYDataTable = New inventory.inv_INVENTORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As inventory.inv_INVENTORYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As inventory) As Integer
            Return Me.Adapter.Update(dataSet, "inv_INVENTORY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PLATETYPE As Integer,  _
                    ByVal CATEGORY_ID As Integer,  _
                    ByVal SUBCATEGORY_ID As Integer,  _
                    ByVal LOCATION_ID As Integer,  _
                    ByVal BRANCHNUMBER As Integer,  _
                    ByVal SUPPLIERNUMBER As Integer,  _
                    ByVal ITEMNUMBERINT As Integer,  _
                    ByVal ITEMNUMBER As String,  _
                    ByVal ITEMCODE As String,  _
                    ByVal SHOPSTATUS As Global.System.Nullable(Of Boolean),  _
                    ByVal ITEMDELETED As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_ORDERALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_PUBLICAUCTION As Global.System.Nullable(Of Boolean),  _
                    ByVal STATUS_ID As Global.System.Nullable(Of Integer),  _
                    ByVal LANG1_DESCRIPTION As String,  _
                    ByVal LANG2_DESCRIPTION As String,  _
                    ByVal LANG3_DESCRIPTION As String,  _
                    ByVal LANG4_DESCRIPTION As String,  _
                    ByVal LANG5_DESCRIPTION As String,  _
                    ByVal LANG6_DESCRIPTION As String,  _
                    ByVal CREATEDATE As Global.System.Nullable(Of Date),  _
                    ByVal ONPROCESS As Global.System.Nullable(Of Boolean),  _
                    ByVal RELEASE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ONBARGAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal ONAUCTION As Global.System.Nullable(Of Boolean),  _
                    ByVal ONFEATURED As Global.System.Nullable(Of Boolean),  _
                    ByVal ONSPECIAL As Global.System.Nullable(Of Boolean),  _
                    ByVal ONEBAY As Global.System.Nullable(Of Boolean),  _
                    ByVal EBAYID As String,  _
                    ByVal ONSPECIAL_FROM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ONSPECIAL_TO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal QTYONSTOCK_CUR As Global.System.Nullable(Of Integer),  _
                    ByVal QTYONSTOCK_MIN As Global.System.Nullable(Of Integer),  _
                    ByVal PURCHASE_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal APPRAISAL_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal DEALER_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal SELL_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal SPECIAL_SELL_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal SPECIAL_DEALER_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal AUCTION_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal NOTES As String,  _
                    ByVal ICON_NAME As String,  _
                    ByVal PICTURE_NAME As String,  _
                    ByVal PICTURE_HIRES_NAME As String,  _
                    ByVal CERTIFICATE_NAME As String,  _
                    ByVal MOVIE_NAME As String,  _
                    ByVal GALLERY_NAME As String,  _
                    ByVal BANNER_NAME As String,  _
                    ByVal LASTMODIFY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal LASTMODIFY_USER As String,  _
                    ByVal LASTMODIFY_USER_ID As Integer,  _
                    ByVal INDEXWORDS As String,  _
                    ByVal REMARKS As String,  _
                    ByVal CLUB_ITEM As Global.System.Nullable(Of Boolean),  _
                    ByVal AUTOGENERATED As Global.System.Nullable(Of Boolean),  _
                    ByVal ITEM_SOLD As Global.System.Nullable(Of Boolean),  _
                    ByVal SIMILAR_ITEMS As String,  _
                    ByVal samplepic As Global.System.Nullable(Of Boolean),  _
                    ByVal smartsort As String,  _
                    ByVal opthash As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PLATETYPE,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CATEGORY_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(SUBCATEGORY_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(LOCATION_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(BRANCHNUMBER,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(SUPPLIERNUMBER,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ITEMNUMBERINT,Integer)
            If (ITEMNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ITEMNUMBER,String)
            End If
            If (ITEMCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ITEMCODE,String)
            End If
            If (SHOPSTATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SHOPSTATUS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (ITEMDELETED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ITEMDELETED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (NO_ORDERALONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(NO_ORDERALONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NO_PUBLICAUCTION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NO_PUBLICAUCTION.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (STATUS_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(STATUS_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LANG1_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LANG1_DESCRIPTION,String)
            End If
            If (LANG2_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(LANG2_DESCRIPTION,String)
            End If
            If (LANG3_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(LANG3_DESCRIPTION,String)
            End If
            If (LANG4_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(LANG4_DESCRIPTION,String)
            End If
            If (LANG5_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(LANG5_DESCRIPTION,String)
            End If
            If (LANG6_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(LANG6_DESCRIPTION,String)
            End If
            If (CREATEDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CREATEDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (ONPROCESS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ONPROCESS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (RELEASE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(RELEASE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ONBARGAIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ONBARGAIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ONAUCTION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ONAUCTION.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ONFEATURED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(ONFEATURED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ONSPECIAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ONSPECIAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (ONEBAY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(ONEBAY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (EBAYID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(EBAYID,String)
            End If
            If (ONSPECIAL_FROM_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ONSPECIAL_FROM_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (ONSPECIAL_TO_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(ONSPECIAL_TO_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (QTYONSTOCK_CUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(QTYONSTOCK_CUR.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (QTYONSTOCK_MIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(QTYONSTOCK_MIN.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (PURCHASE_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(PURCHASE_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (APPRAISAL_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(APPRAISAL_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (DEALER_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(DEALER_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SELL_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SELL_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (SPECIAL_SELL_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(SPECIAL_SELL_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (SPECIAL_DEALER_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(SPECIAL_DEALER_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (AUCTION_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(AUCTION_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (NOTES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(NOTES,String)
            End If
            If (ICON_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ICON_NAME,String)
            End If
            If (PICTURE_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(PICTURE_NAME,String)
            End If
            If (PICTURE_HIRES_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(PICTURE_HIRES_NAME,String)
            End If
            If (CERTIFICATE_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(CERTIFICATE_NAME,String)
            End If
            If (MOVIE_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(MOVIE_NAME,String)
            End If
            If (GALLERY_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(GALLERY_NAME,String)
            End If
            If (BANNER_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(BANNER_NAME,String)
            End If
            If (LASTMODIFY_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(LASTMODIFY_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (LASTMODIFY_USER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(LASTMODIFY_USER,String)
            End If
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(LASTMODIFY_USER_ID,Integer)
            If (INDEXWORDS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(INDEXWORDS,String)
            End If
            If (REMARKS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(REMARKS,String)
            End If
            If (CLUB_ITEM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(CLUB_ITEM.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (AUTOGENERATED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(AUTOGENERATED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (ITEM_SOLD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(ITEM_SOLD.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (SIMILAR_ITEMS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(SIMILAR_ITEMS,String)
            End If
            If (samplepic.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(samplepic.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (smartsort Is Nothing) Then
                Throw New Global.System.ArgumentNullException("smartsort")
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(smartsort,String)
            End If
            If (opthash Is Nothing) Then
                Throw New Global.System.ArgumentNullException("opthash")
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(opthash,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PLATETYPE As Integer,  _
                    ByVal CATEGORY_ID As Integer,  _
                    ByVal SUBCATEGORY_ID As Integer,  _
                    ByVal LOCATION_ID As Integer,  _
                    ByVal BRANCHNUMBER As Integer,  _
                    ByVal SUPPLIERNUMBER As Integer,  _
                    ByVal ITEMNUMBERINT As Integer,  _
                    ByVal ITEMNUMBER As String,  _
                    ByVal ITEMCODE As String,  _
                    ByVal SHOPSTATUS As Global.System.Nullable(Of Boolean),  _
                    ByVal ITEMDELETED As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_ORDERALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_PUBLICAUCTION As Global.System.Nullable(Of Boolean),  _
                    ByVal STATUS_ID As Global.System.Nullable(Of Integer),  _
                    ByVal LANG1_DESCRIPTION As String,  _
                    ByVal LANG2_DESCRIPTION As String,  _
                    ByVal LANG3_DESCRIPTION As String,  _
                    ByVal LANG4_DESCRIPTION As String,  _
                    ByVal LANG5_DESCRIPTION As String,  _
                    ByVal LANG6_DESCRIPTION As String,  _
                    ByVal CREATEDATE As Global.System.Nullable(Of Date),  _
                    ByVal ONPROCESS As Global.System.Nullable(Of Boolean),  _
                    ByVal RELEASE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ONBARGAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal ONAUCTION As Global.System.Nullable(Of Boolean),  _
                    ByVal ONFEATURED As Global.System.Nullable(Of Boolean),  _
                    ByVal ONSPECIAL As Global.System.Nullable(Of Boolean),  _
                    ByVal ONEBAY As Global.System.Nullable(Of Boolean),  _
                    ByVal EBAYID As String,  _
                    ByVal ONSPECIAL_FROM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ONSPECIAL_TO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal QTYONSTOCK_CUR As Global.System.Nullable(Of Integer),  _
                    ByVal QTYONSTOCK_MIN As Global.System.Nullable(Of Integer),  _
                    ByVal PURCHASE_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal APPRAISAL_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal DEALER_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal SELL_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal SPECIAL_SELL_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal SPECIAL_DEALER_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal AUCTION_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal NOTES As String,  _
                    ByVal ICON_NAME As String,  _
                    ByVal PICTURE_NAME As String,  _
                    ByVal PICTURE_HIRES_NAME As String,  _
                    ByVal CERTIFICATE_NAME As String,  _
                    ByVal MOVIE_NAME As String,  _
                    ByVal GALLERY_NAME As String,  _
                    ByVal BANNER_NAME As String,  _
                    ByVal LASTMODIFY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal LASTMODIFY_USER As String,  _
                    ByVal LASTMODIFY_USER_ID As Integer,  _
                    ByVal INDEXWORDS As String,  _
                    ByVal REMARKS As String,  _
                    ByVal CLUB_ITEM As Global.System.Nullable(Of Boolean),  _
                    ByVal AUTOGENERATED As Global.System.Nullable(Of Boolean),  _
                    ByVal ITEM_SOLD As Global.System.Nullable(Of Boolean),  _
                    ByVal SIMILAR_ITEMS As String,  _
                    ByVal samplepic As Global.System.Nullable(Of Boolean),  _
                    ByVal smartsort As String,  _
                    ByVal opthash As String,  _
                    ByVal Original_ID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PLATETYPE,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CATEGORY_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SUBCATEGORY_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LOCATION_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(BRANCHNUMBER,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SUPPLIERNUMBER,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ITEMNUMBERINT,Integer)
            If (ITEMNUMBER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ITEMNUMBER,String)
            End If
            If (ITEMCODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ITEMCODE,String)
            End If
            If (SHOPSTATUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SHOPSTATUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (ITEMDELETED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ITEMDELETED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (NO_ORDERALONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(NO_ORDERALONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NO_PUBLICAUCTION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NO_PUBLICAUCTION.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (STATUS_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(STATUS_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LANG1_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(LANG1_DESCRIPTION,String)
            End If
            If (LANG2_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(LANG2_DESCRIPTION,String)
            End If
            If (LANG3_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(LANG3_DESCRIPTION,String)
            End If
            If (LANG4_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(LANG4_DESCRIPTION,String)
            End If
            If (LANG5_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(LANG5_DESCRIPTION,String)
            End If
            If (LANG6_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(LANG6_DESCRIPTION,String)
            End If
            If (CREATEDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CREATEDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (ONPROCESS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ONPROCESS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (RELEASE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(RELEASE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ONBARGAIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ONBARGAIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ONAUCTION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(ONAUCTION.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ONFEATURED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(ONFEATURED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ONSPECIAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ONSPECIAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (ONEBAY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(ONEBAY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (EBAYID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(EBAYID,String)
            End If
            If (ONSPECIAL_FROM_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ONSPECIAL_FROM_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (ONSPECIAL_TO_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(ONSPECIAL_TO_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (QTYONSTOCK_CUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(QTYONSTOCK_CUR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (QTYONSTOCK_MIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(QTYONSTOCK_MIN.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (PURCHASE_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(PURCHASE_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (APPRAISAL_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(APPRAISAL_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (DEALER_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(DEALER_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SELL_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(SELL_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (SPECIAL_SELL_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(SPECIAL_SELL_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (SPECIAL_DEALER_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(SPECIAL_DEALER_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (AUCTION_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(AUCTION_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(NOTES,String)
            End If
            If (ICON_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(ICON_NAME,String)
            End If
            If (PICTURE_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(PICTURE_NAME,String)
            End If
            If (PICTURE_HIRES_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(PICTURE_HIRES_NAME,String)
            End If
            If (CERTIFICATE_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(CERTIFICATE_NAME,String)
            End If
            If (MOVIE_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(MOVIE_NAME,String)
            End If
            If (GALLERY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(GALLERY_NAME,String)
            End If
            If (BANNER_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(BANNER_NAME,String)
            End If
            If (LASTMODIFY_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(LASTMODIFY_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (LASTMODIFY_USER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(LASTMODIFY_USER,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(LASTMODIFY_USER_ID,Integer)
            If (INDEXWORDS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(INDEXWORDS,String)
            End If
            If (REMARKS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(REMARKS,String)
            End If
            If (CLUB_ITEM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(CLUB_ITEM.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (AUTOGENERATED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(AUTOGENERATED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (ITEM_SOLD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(ITEM_SOLD.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (SIMILAR_ITEMS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(SIMILAR_ITEMS,String)
            End If
            If (samplepic.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(samplepic.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (smartsort Is Nothing) Then
                Throw New Global.System.ArgumentNullException("smartsort")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(smartsort,String)
            End If
            If (opthash Is Nothing) Then
                Throw New Global.System.ArgumentNullException("opthash")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(opthash,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
End Namespace
