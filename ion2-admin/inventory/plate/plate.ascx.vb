Partial Class plate
    Inherits iFoundation.wsc_usercontrol

    Public nId As Int32
    Public oRecord_mp As DataRow
    Public oRecord_sp As DataRow
    Public oPlate As ion_resources.cls_ion_plate_lgc


    Public cPictureFileURL As String = ""
    Public cHRPictureFileURL As String = ""
    Public cIconFileURL As String = ""
    Public cMovieFileURL As String = ""
    Public cReportFileURL As String = ""
    Public cGalleryFileURL As String = ""
    Public cBannerFileURL As String = ""

    Protected cnt_diamonds As sp_diamonds
    Protected cnt_gemstones As sp_gemstones
    Protected cnt_jewelry As sp_jewelry


#Region " Web Form Designer Generated Code "

    'This call is required by the Web Form Designer.
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()

    End Sub

    Protected WithEvents Panel1 As System.Web.UI.WebControls.Panel

    Private Sub Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
        'CODEGEN: This method call is required by the Web Form Designer
        'Do not modify it using the code editor.
        InitializeComponent()

    End Sub

#End Region

    '################################################################################################
    Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Not Page.IsPostBack Then
            '--- Get parameters
            Dim nPlate As Int32 = Convert.ToInt32(Request.QueryString("plate"))
            Dim nBranch As Int32 = Convert.ToInt32(Request.QueryString("branch"))
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            Dim nWorkMode As Int32 = Convert.ToInt32(Request.QueryString("mode"))

            '--- Map Vars if they exist
            Me.hid_branch_id.Text = nBranch
            Me.hid_item_id.Text = nId
            Me.hid_plate_id.Text = nPlate
            Me.hid_workmode.Text = nWorkMode
            Me.hid_has_whitegold.Text = False.ToString()
            Me.hid_has_yellowgold.Text = False.ToString()
            Me.hid_has_movie.Text = False.ToString()
        End If

        '--- Set security
        If Session("user").userlevel < 5 And Convert.ToInt32(Me.hid_workmode.Text) = 2 Then
            Me.txt_purchase_price.Visible = False
            Me.txt_sell_price.Visible = False
            Me.txt_dealer_price.Visible = False
            Me.txt_appraisal_price.Visible = False
            Me.RangeValidator1.Visible = False
            Me.RangeValidator2.Visible = False
            Me.RangeValidator3.Visible = False
            Me.RangeValidator4.Visible = False
        End If


        '--- Assign objects to controls
        cnt_diamonds = Me.FindControl("sp_diamonds1")
        cnt_gemstones = Me.FindControl("sp_gemstones1")
        cnt_jewelry = Me.FindControl("sp_jewelry1")



        '--- Get SUBplate type
        Dim oSubPlate As Object
        'bError = Me.get_subplate_object(Me.hid_plate_id.Text, oSubPlate)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "load_combos [cnt_diamonds.load_combos]"
            Server.Transfer("/aspxerror.aspx")
        End If



        '--- Make controls invisible
        Me.Visible = False
        cnt_diamonds.Visible = False
        cnt_gemstones.Visible = False
        cnt_jewelry.Visible = False
        Me.btn_submit.Visible = False

        '--- Initialize form - defaults
        'Me.chk_deleted.Enabled = False
        Me.chk_in_process.Enabled = False
        Me.chk_on_local_auction.Enabled = True
        Me.chk_autogenerated.Enabled = False
        Me.chk_itemsold.Enabled = True


        Select Case Convert.ToInt32(Me.hid_workmode.Text)
            Case 1    '--- ADD
                If Not Page.IsPostBack Then
                    '--- Load combo boxes
                    bError = Me.load_combos(Convert.ToInt32(Me.hid_workmode.Text), Convert.ToInt32(Me.hid_plate_id.Text), 0)
                    If bError Then
                        Session("o_error")._Err_Number = Me._err_number
                        Session("o_error")._Err_Description = Me._err_description
                        Session("o_error")._Err_Source = Me._err_source
                        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                        Session("o_error")._Err_Call = "Page_Load [load_combos]"
                        Server.Transfer("/aspxerror.aspx")
                    End If

                    '- Set date defaults on Specials
                    Me.txt_special_from_date.Text = Today.Date
                    Me.txt_special_to_date.Text = DateAdd(DateInterval.Day, Application("defaults").inv_default_special_date, Today.Date)


                End If

                '- Set inventory defaults
                Me.txt_stock_curr.Text = 1
                Me.txt_stock_min.Text = 1
                Me.txt_stock_curr.Enabled = True
                Me.txt_stock_min.Enabled = True

                '--- set txt_boxes in parent control (additem.aspx)
                Dim oTmp_platebox As System.Web.UI.WebControls.DropDownList = Me.Parent.FindControl("cmb_platetype")
                oTmp_platebox.SelectedIndex = Convert.ToInt32(Me.hid_plate_id.Text)
                oTmp_platebox.Enabled = False

                Dim oTmp_Branchbox As System.Web.UI.WebControls.DropDownList = Me.Parent.FindControl("cmb_branch")
                oTmp_Branchbox.SelectedIndex = GetComboValue(oTmp_Branchbox, Convert.ToInt32(Me.hid_branch_id.Text))
                oTmp_Branchbox.Enabled = False
                Me.txt_branch.Text = oTmp_Branchbox.SelectedItem.Text

                '--- set files to 0
                Me.txt_hdn_picture_wg.Visible = False
                Me.txt_hdn_hrpicture_wg.Visible = False
                Me.txt_hdn_icon_wg.Visible = False
                Me.txt_hdn_movie_wg.Visible = False
                Me.txt_hdn_report_wg.Visible = False
                Me.txt_hdn_gallery_wg.Visible = False
                Me.txt_hdn_banner_wg.Visible = False

                '--- Create initial Item Number
                Dim cBranchNumber As String
                Select Case Len(Trim(Str(Convert.ToInt32(Me.hid_branch_id.Text))))
                    Case 1
                        cBranchNumber = "0" & Trim(Str(Convert.ToInt32(Me.hid_branch_id.Text)))
                    Case 2
                        cBranchNumber = Trim(Str(Convert.ToInt32(Me.hid_branch_id.Text)))

                End Select
                txt_itemnumber.Text = cBranchNumber + "-"


            Case 2    '--- EDIT

                '--- If ID is not Empty, get Plate
                If Convert.ToInt32(Me.hid_item_id.Text) > 0 And Convert.ToInt32(Me.hid_workmode.Text) = 2 Then

                    '--- Load Plate
                    If Not Page.IsPostBack Then
                        '--- Define Plate skelet
                        Dim oPlateSkelet As New ion_two.skl_inventory

                        '--- Define logics and get the plate
                        Dim oTmpPlateLogics As New ion_two.cls_inventory_lgc
                        oTmpPlateLogics._connection_string = Application("config").connection_string
                        oTmpPlateLogics._dbtype = Application("config").connection_string_type
                        bError = oTmpPlateLogics.read(Convert.ToInt32(Me.hid_item_id.Text), oPlateSkelet)
                        If bError Then
                            Session("o_error")._Err_Number = oTmpPlateLogics._err_number
                            Session("o_error")._Err_Description = oTmpPlateLogics._err_description
                            Session("o_error")._Err_Source = oTmpPlateLogics._err_source
                            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                            Session("o_error")._Err_Call = "GetPlate [load_combos]"
                            Server.Transfer("/aspxerror.aspx")
                        End If

                        '--- Map Vars if they exist
                        Me.hid_branch_id.Text = oPlateSkelet._branchnumber
                        Me.hid_plate_id.Text = oPlateSkelet._platetype


                        '--- Load combo boxes
                        bError = Me.load_combos(2, oPlateSkelet._platetype, oPlateSkelet._category_id)
                        If bError Then
                            Session("o_error")._Err_Number = Me._err_number
                            Session("o_error")._Err_Description = Me._err_description
                            Session("o_error")._Err_Source = Me._err_source
                            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                            Session("o_error")._Err_Call = "GetPlate [load_combos]"
                            Server.Transfer("/aspxerror.aspx")
                        End If
                        oTmpPlateLogics = Nothing


                        '--- Load Plate to screen
                        bError = Me.LoadPlate(oPlateSkelet)
                        If bError Then
                            Session("o_error")._Err_Number = Me._err_number
                            Session("o_error")._Err_Description = Me._err_description
                            Session("o_error")._Err_Source = Me._err_source
                            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                            Session("o_error")._Err_Call = "Page_Load [GetPlate]"
                            Server.Transfer("/aspxerror.aspx")
                        End If

                        '--- Show Branch name

                        '### OLD ROUTINE ###'
                        '--- Prduce branch number from field in DB
                        Dim oTmpItem As New ion_resources.cls_itemnumber
                        Dim oError As New cls_error
                        oTmpItem.connection_string = Application("config").connection_string
                        oTmpItem.branch = oPlateSkelet._branchnumber
                        bError = oTmpItem.GetBranchName(Me.txt_branch.Text)
                        If bError Then
                            Session("o_error")._Err_Number = oError.err_number
                            Session("o_error")._Err_Description = oError.err_description
                            Session("o_error")._Err_Source = oError.err_source
                            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                            Session("o_error")._Err_Call = "GetPlate [GetBranchName]"
                            Server.Transfer("/aspxerror.aspx")
                        End If
                        oTmpItem = Nothing
                        '###################'

                    End If

                End If

                '--- Show inventory control
                Me.txt_stock_curr.Enabled = True
                Me.txt_stock_min.Enabled = True
                Me.cmb_supplier.Enabled = False

        End Select

        '--- switch the correct webcontrols to create the plate
        Dim oLbl_inventory As System.Web.UI.WebControls.Label = Me.Parent.FindControl("lbl_inventory")
        Select Case Convert.ToInt32(Me.hid_plate_id.Text)
            Case 1
                Me.Visible = True
                cnt_diamonds.Visible = True
                Me.btn_submit.Visible = True
                oLbl_inventory.Visible = True
                Select Case Convert.ToInt32(Me.hid_workmode.Text)
                    Case 1       '--- ADD
                        oLbl_inventory.Text = "Add Diamonds"
                    Case 2
                        oLbl_inventory.Text = "Edit Diamonds"
                End Select

            Case 2
                Me.Visible = True
                cnt_gemstones.Visible = True
                Me.btn_submit.Visible = True
                oLbl_inventory.Visible = True
                Select Case Convert.ToInt32(Me.hid_workmode.Text)
                    Case 1       '--- ADD
                        oLbl_inventory.Text = "Add Gemstones"
                    Case 2
                        oLbl_inventory.Text = "Edit Gemstones"
                End Select

            Case 3
                Me.Visible = True
                cnt_jewelry.Visible = True
                Me.btn_submit.Visible = True
                oLbl_inventory.Visible = True
                Select Case Convert.ToInt32(Me.hid_workmode.Text)
                    Case 1       '--- ADD
                        oLbl_inventory.Text = "Add Jewelry"
                    Case 2
                        oLbl_inventory.Text = "Edit Jewelry"
                End Select

        End Select

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "Page_Load [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Function load_combos(ByVal nWorkMode As Int32, ByVal nPlate As Int32, ByVal nCategory As Int32) As Boolean
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        Dim oTmpCombo As New iFunctions.cls_combo
        oTmpCombo._connection_string = Application("config").connection_string
        oTmpCombo._dbtype = Application("config").connection_string_type


        '--- fill CATEGORIES combo
        oTmpCombo._combobox = Me.cmb_category
        oTmpCombo._sqlstring = "select id, lang" & Session("user").language & "_longdescr from inv_CATEGORIES where plate_type= " & nPlate & " order by sortorder"
        oTmpCombo._textfield = "lang" & Session("user").language & "_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If


        '--- fill SUBCATEGORIES combo, if workmode = 0 an error is returned
        oTmpCombo._combobox = Me.cmb_subcategory
        If nWorkMode = 1 Then   '--- ADD
            oTmpCombo._sqlstring = "select id, lang" & Session("user").language & "_longdescr from inv_SUBCATEGORIES where active = 1 and category_id= " & Me.cmb_category.SelectedItem.Value & " order by sortorder"
        Else
            oTmpCombo._sqlstring = "select id, lang" & Session("user").language & "_longdescr from inv_SUBCATEGORIES where category_id= " & nCategory & " order by sortorder"
        End If

        oTmpCombo._textfield = "lang" & Session("user").language & "_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If


        '--- fill supplier combo - NOTE! we are not loading the autogenerated items when adding a new item
        oTmpCombo._combobox = Me.cmb_supplier
        If nWorkMode = 1 Then   '--- ADD
            oTmpCombo._sqlstring = "select id, company from spl_SUPPLIERS where active = 1 and branch_id = " & Me.hid_branch_id.Text & " and SupplierNumber <> 0 order by suppliernumber"
        Else
            oTmpCombo._sqlstring = "select id, company from spl_SUPPLIERS where active = 1 and branch_id = " & Me.hid_branch_id.Text & " order by suppliernumber"
        End If
        oTmpCombo._textfield = "company"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If


        '--- fill LOCATION combo
        oTmpCombo._combobox = Me.cmb_location
        oTmpCombo._sqlstring = "select id, lang" & Session("user").language & "_longdescr from inv_LOCATION order by sortorder"
        oTmpCombo._textfield = "lang" & Session("user").language & "_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If


        '--- fill STATUS combo
        oTmpCombo._combobox = Me.cmb_status
        oTmpCombo._sqlstring = "select id, lang" & Session("user").language & "_longdescr from inv_STATUS order by sortorder"
        oTmpCombo._textfield = "lang" & Session("user").language & "_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If


        '--- fill LANGUAGE1 combo
        oTmpCombo._combobox = Me.cmb_language1
        Select Case nPlate
            Case 1
                oTmpCombo._sqlstring = "select id, lang1_longdescr from inv_NOTES_DIAMONDS order by sortorder"
            Case 2
                oTmpCombo._sqlstring = "select id, lang1_longdescr from inv_NOTES_GEMSTONES order by sortorder"
            Case 3
                oTmpCombo._sqlstring = "select id, lang1_longdescr from inv_NOTES_JEWELRY order by sortorder"
        End Select
        oTmpCombo._textfield = "lang1_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If


        '--- fill LANGUAGE2 combo
        oTmpCombo._combobox = Me.cmb_language2
        Select Case nPlate
            Case 1
                oTmpCombo._sqlstring = "select id, lang2_longdescr from inv_NOTES_DIAMONDS order by sortorder"
            Case 2
                oTmpCombo._sqlstring = "select id, lang2_longdescr from inv_NOTES_GEMSTONES order by sortorder"
            Case 3
                oTmpCombo._sqlstring = "select id, lang2_longdescr from inv_NOTES_JEWELRY order by sortorder"
        End Select
        oTmpCombo._textfield = "lang2_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If

        '--- fill LANGUAGE3 combo
        oTmpCombo._combobox = Me.cmb_language3
        Select Case nPlate
            Case 1
                oTmpCombo._sqlstring = "select id, lang3_longdescr from inv_NOTES_DIAMONDS order by sortorder"
            Case 2
                oTmpCombo._sqlstring = "select id, lang3_longdescr from inv_NOTES_GEMSTONES order by sortorder"
            Case 3
                oTmpCombo._sqlstring = "select id, lang3_longdescr from inv_NOTES_JEWELRY order by sortorder"
        End Select
        oTmpCombo._textfield = "lang3_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If

        '--- fill LANGUAGE4 combo
        oTmpCombo._combobox = Me.cmb_language4
        Select Case nPlate
            Case 1
                oTmpCombo._sqlstring = "select id, lang4_longdescr from inv_NOTES_DIAMONDS order by sortorder"
            Case 2
                oTmpCombo._sqlstring = "select id, lang4_longdescr from inv_NOTES_GEMSTONES order by sortorder"
            Case 3
                oTmpCombo._sqlstring = "select id, lang4_longdescr from inv_NOTES_JEWELRY order by sortorder"
        End Select
        oTmpCombo._textfield = "lang4_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If

        '--- fill LANGUAGE5 combo
        oTmpCombo._combobox = Me.cmb_language5
        Select Case nPlate
            Case 1
                oTmpCombo._sqlstring = "select id, lang5_longdescr from inv_NOTES_DIAMONDS order by sortorder"
            Case 2
                oTmpCombo._sqlstring = "select id, lang5_longdescr from inv_NOTES_GEMSTONES order by sortorder"
            Case 3
                oTmpCombo._sqlstring = "select id, lang5_longdescr from inv_NOTES_JEWELRY order by sortorder"
        End Select
        oTmpCombo._textfield = "lang5_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If

        '--- fill LANGUAGE6 combo
        oTmpCombo._combobox = Me.cmb_language6
        Select Case nPlate
            Case 1
                oTmpCombo._sqlstring = "select id, lang6_longdescr from inv_NOTES_DIAMONDS order by sortorder"
            Case 2
                oTmpCombo._sqlstring = "select id, lang6_longdescr from inv_NOTES_GEMSTONES order by sortorder"
            Case 3
                oTmpCombo._sqlstring = "select id, lang6_longdescr from inv_NOTES_JEWELRY order by sortorder"
        End Select
        oTmpCombo._textfield = "lang6_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Me._err_number = oTmpCombo._err_number
            Me._err_description = oTmpCombo._err_description
            Me._err_source = oTmpCombo._err_source
            Return True
        End If


        '--- Get SUBplate type
        Dim oSubPlate As Object
        bError = Me.get_subplate_object(nPlate, oSubPlate)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "load_combos [cnt_diamonds.load_combos]"
            Server.Transfer("/aspxerror.aspx")
        End If

        bError = oSubPlate.load_combos()
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "load_combos [oSubPlate.load_combos]"
            Server.Transfer("/aspxerror.aspx")
        End If


        '--- Release
        oTmpCombo = Nothing

        Return False
        Exit Function

ErrorHandler:
        Me._err_number = Err.Number
        Me._err_description = Err.Description
        Me._err_source = Err.Source
        Return True

    End Function

    Private Function LoadPlate(ByRef oPlateSkelet As ion_two.skl_inventory) As Boolean
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False


        '--- Map plate in form
        Dim oTmpCombo As New iFunctions.cls_combo

        Me.txt_itemnumber.Text = oPlateSkelet._itemnumber
        Me.cmb_category.SelectedIndex = oTmpCombo.GetComboValue(Me.cmb_category, oPlateSkelet._category_id)
        Me.cmb_subcategory.SelectedIndex = oTmpCombo.GetComboValue(Me.cmb_subcategory, oPlateSkelet._subcategory_id)
        Me.cmb_location.SelectedIndex = oTmpCombo.GetComboValue(Me.cmb_location, oPlateSkelet._location_id)
        Me.cmb_supplier.SelectedIndex = oTmpCombo.GetComboValue(Me.cmb_supplier, oPlateSkelet._suppliernumber)
        Me.txt_supplier_code.Text = oPlateSkelet._itemcode
        Me.chk_active_in_shop.Checked = oPlateSkelet._active
        Me.chk_deleted.Checked = oPlateSkelet._deleted
        Me.chk_cannot_be_ordered_alone.Checked = oPlateSkelet._no_orderalone
        Me.chk_not_in_public_auction.Checked = oPlateSkelet._no_publicauction
        Me.chk_clubitem.Checked = oPlateSkelet._club_item
        Me.cmb_status.SelectedIndex = oTmpCombo.GetComboValue(Me.cmb_status, oPlateSkelet._status_id)
        Me.chk_featured.Checked = oPlateSkelet.featured

        Me.txt_language1.Text = oPlateSkelet._lang1_description
        Me.txt_language2.Text = oPlateSkelet._lang2_description
        Me.txt_language3.Text = oPlateSkelet._lang3_description
        Me.txt_language4.Text = oPlateSkelet._lang4_description
        Me.txt_language5.Text = oPlateSkelet._lang5_description
        Me.txt_language6.Text = oPlateSkelet._lang6_description

        Me.chk_in_process.Checked = oPlateSkelet._onprocess
        Me.chk_on_local_auction.Checked = oPlateSkelet._onauction
        Me.chk_item_special.Checked = oPlateSkelet._onspecial
        Me.txt_special_from_date.Text = oPlateSkelet._onspecial_from_date
        Me.txt_special_to_date.Text = oPlateSkelet._onspecial_to_date
        Me.txt_stock_curr.Text = oPlateSkelet._qtyonstock_cur
        Me.txt_stock_min.Text = oPlateSkelet._qtyonstock_min

        Me.txt_purchase_price.Text = Format(oPlateSkelet._purchase_price, "##,##0")
        Me.txt_appraisal_price.Text = Format(oPlateSkelet._appraisal_price, "##,##0")
        Me.txt_dealer_price.Text = Format(oPlateSkelet._dealer_price, "##,##0")
        Me.txt_sell_price.Text = Format(oPlateSkelet._sell_price, "##,##0")
        Me.txt_special_sell_price.Text = Format(oPlateSkelet._special_sell_price, "##,##0")
        Me.txt_special_dealer_price.Text = Format(oPlateSkelet._special_dealer_price, "##,##0")
        Me.txt_notes.Text = oPlateSkelet._notes
        Me.txt_remarks.Text = oPlateSkelet._remarks
        Me.txt_indexwords.Text = oPlateSkelet._indexwords
        Me.txt_lastuser_id.Text = oPlateSkelet._lastmodify_user_id
        Me.txt_lastuser_name.Text = oPlateSkelet._lastmodify_user
        Me.txt_lastuser_datetime.Text = oPlateSkelet._lastmodify_date
        Me.chk_autogenerated.Checked = oPlateSkelet._autogenerated
        Me.chk_itemsold.Checked = oPlateSkelet._item_sold
        Me.hid_has_whitegold.Text = oPlateSkelet.has_white_gold
        Me.hid_has_yellowgold.Text = oPlateSkelet.has_yellow_gold
        Me.hid_has_movie.Text = oPlateSkelet.has_movie

        Me.txt_similaritems.Text = oPlateSkelet._similar_items



        ''opthash stuff

        If oPlateSkelet.opthash("extraopen") = "1" Then
            Me.chk_extraopen.Checked = True
        End If

        If oPlateSkelet.opthash("usepayments") = "1" Then
            Me.cmb_payments.SelectedIndex = GetComboIndex(Me.cmb_payments, oPlateSkelet.opthash("payments"))
        End If

        If oPlateSkelet.opthash("bestoffer") = "1" Then
            Me.chk_bestoffer.Checked = True
        End If

'        If oPlateSkelet._picture_pic <> "" Then
'            Me.txt_hdn_picture.Text = oPlateSkelet._picture_pic
'            Me.txt_file_picture.Disabled = True
'            Me.txt_hdn_picture.Visible = True
'            cPictureFileURL = Application("config").domain + Application("defaults").ctg_categories(oPlateSkelet._category_id).relative_path + Me.txt_hdn_picture.Text
'        Else
'            Me.txt_hdn_picture.Visible = False
'        End If
'
'        If oPlateSkelet._picture_hires_pic <> "" Then
'            Me.txt_hdn_hrpicture.Text = oPlateSkelet._picture_hires_pic
'            Me.txt_file_hrpicture.Disabled = True
'            Me.txt_hdn_hrpicture.Visible = True
'            cHRPictureFileURL = Application("defaults").ctg_categories(oPlateSkelet._category_id).relative_path + Me.txt_hdn_hrpicture.Text
'        Else
'            Me.txt_hdn_hrpicture.Visible = False
'        End If
'
'        If oPlateSkelet._icon_pic <> "" Then
'            Me.txt_hdn_icon.Text = oPlateSkelet._icon_pic
'            Me.txt_file_icon.Disabled = True
'            Me.txt_hdn_icon.Visible = True
'            cIconFileURL = Application("defaults").ctg_categories(oPlateSkelet._category_id).relative_path + Me.txt_hdn_icon.Text
'        Else
'            Me.txt_hdn_icon.Visible = False
'        End If
'
'        If oPlateSkelet._movie_pic <> "" Then
'            Me.txt_hdn_movie.Text = oPlateSkelet._movie_pic
'            Me.txt_file_movie.Disabled = True
'            Me.txt_hdn_movie.Visible = True
'            cMovieFileURL = Application("defaults").ctg_categories(oPlateSkelet._category_id).relative_path + Me.txt_hdn_movie.Text
'        Else
'            Me.txt_hdn_movie.Visible = False
'        End If
'
'        If oPlateSkelet._certificate_pic <> "" Then
'            Me.txt_hdn_report.Text = oPlateSkelet._certificate_pic
'            Me.txt_file_report.Disabled = True
'            Me.txt_hdn_report.Visible = True
'            cReportFileURL = Application("defaults").ctg_categories(oPlateSkelet._category_id).relative_path + txt_hdn_report.Text
'        Else
'            Me.txt_hdn_report.Visible = False
'        End If
'
'        If oPlateSkelet._gallery_pic <> "" Then
'            Me.txt_hdn_gallery.Text = oPlateSkelet._gallery_pic
'            Me.txt_file_gallery.Disabled = True
'            Me.txt_hdn_gallery.Visible = True
'            cGalleryFileURL = Application("defaults").ctg_categories(oPlateSkelet._category_id).relative_path + txt_hdn_gallery.Text
'        Else
'            Me.txt_hdn_gallery.Visible = False
'        End If
'
'        If oPlateSkelet._banner_pic <> "" Then
'            Me.txt_hdn_banner.Text = oPlateSkelet._banner_pic
'            Me.txt_file_banner.Disabled = True
'            Me.txt_hdn_banner.Visible = True
'            cBannerFileURL = Application("defaults").ctg_categories(oPlateSkelet._category_id).relative_path + txt_hdn_banner.Text
'        Else
'            Me.txt_hdn_banner.Visible = False
'        End If
        smartsort_text.Text = oPlateSkelet._smartsort_txt

        If oPlateSkelet._onauction = True Then
            ''    Me.chk_on_local_auction.Checked = True
            Me.txt_auction_minbid.Text = Format(oPlateSkelet.auction_price, "##,##0")
            Me.txt_auction_release.Text = Convert.ToString(oPlateSkelet.release_date.Date.ToShortDateString)
        End If

        If oPlateSkelet.onbargain Then
            Me.chk_bargain.Checked = True
        Else
            Me.chk_bargain.Checked = False
        End If

        If oPlateSkelet.samplepic Then
            Me.chk_samplepic.Checked = True
        Else
            Me.chk_samplepic.Checked = False
        End If


        '--- Get SUBplate type
        Dim oSubPlate As Object
        bError = Me.get_subplate_object(Me.hid_plate_id.Text, oSubPlate)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "loadPlate [get_subplate_object]"
            Server.Transfer("/aspxerror.aspx")
        End If

        '--- Load SUBplate
        bError = oSubPlate.get_plate(oPlateSkelet)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "loadPlate [get_plate]"
            Server.Transfer("/aspxerror.aspx")
        End If


        '--- Release
        oTmpCombo = Nothing

        Return False
        Exit Function

ErrorHandler:
        Me._err_number = Err.Number
        Me._err_description = Err.Description
        Me._err_source = Err.Source
        Return True

    End Function

    Private Sub cmb_language1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmb_language1.SelectedIndexChanged
        Me.txt_language1.Text = Me.cmb_language1.SelectedItem.Text
        Me.txt_notes.Text = Me.cmb_language1.SelectedItem.Text
    End Sub

    Private Sub cmb_language2_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmb_language2.SelectedIndexChanged
        Me.txt_language2.Text = Me.cmb_language2.SelectedItem.Text
    End Sub

    Private Sub cmb_language3_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmb_language3.SelectedIndexChanged
        Me.txt_language3.Text = Me.cmb_language3.SelectedItem.Text
    End Sub

    Private Sub cmb_language4_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmb_language4.SelectedIndexChanged
        Me.txt_language4.Text = Me.cmb_language4.SelectedItem.Text
    End Sub

    Private Sub cmb_language5_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmb_language5.SelectedIndexChanged
        Me.txt_language5.Text = Me.cmb_language5.SelectedItem.Text
    End Sub

    Private Sub cmb_language6_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmb_language6.SelectedIndexChanged
        Me.txt_language6.Text = Me.cmb_language6.SelectedItem.Text
    End Sub

    Private Function uploadfiles(ByVal nId, ByVal cItemNumber, ByVal nItemCategory) As Boolean
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        Dim oFileObject As System.Web.UI.HtmlControls.HtmlInputFile
        Dim nErrorType As Integer = 0
        Dim cFileExtension As String
        Dim cNewFileName As String
        Dim cDirectory As String = ""

        ''yellow gold uses the -yg extention
        '--- PICTURE
        If Not IsNothing(Me.txt_file_picture.PostedFile) Then
            If Me.txt_file_picture.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_picture

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-pic-yg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ PICTURE: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 1, Application("config").connection_string)
                    Session("message").listbox.items.add("+ PICTURE: saved file: " + cDirectory + cNewFileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- PICTURE: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- PICTURE: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- PICTURE: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If

        '--- HIRES-PICTURE
        If Not IsNothing(Me.txt_file_hrpicture.PostedFile) Then
            If Me.txt_file_hrpicture.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_hrpicture

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-hires-yg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ HIRES: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 2, Application("config").connection_string)
                    Session("message").listbox.items.add("+ HIRES: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- HIRES: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- HIRES: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- HIRES: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If


        '--- ICON
        If Not IsNothing(Me.txt_file_icon.PostedFile) Then
            If Me.txt_file_icon.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_icon

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-icon-yg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ ICON: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 3, Application("config").connection_string)
                    bError = UpdateMetalMediaRecord(nId, "yg", Application("config").connection_string)
                    Session("message").listbox.items.add("+ ICON: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- ICON: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- ICON: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- ICON: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If

        '--- MOVIE
        If Not IsNothing(Me.txt_file_movie.PostedFile) Then
            If Me.txt_file_movie.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_movie

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-mov-yg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ MOVIE: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 4, Application("config").connection_string)
                    bError = UpdateMovieRecord(nId, 4, Application("config").connection_string)
                    Session("message").listbox.items.add("+ MOVIE: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- MOVIE: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- MOVIE: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- MOVIE: Error Not an IMAGE file: " + cNewFileName)
                    End Select
                End If
            End If
        End If


        '--- CERTIFICATE
        If Not IsNothing(Me.txt_file_report.PostedFile) Then
            If Me.txt_file_report.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_report

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-report-all" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ CERTIFICATE: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 5, Application("config").connection_string)
                    Session("message").listbox.items.add("+ CERTIFICATE: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- CERTIFICATE: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- CERTIFICATE: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- CERTIFICATE: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If

        '--- GALLERY
        If Not IsNothing(Me.txt_file_gallery.PostedFile) Then
            If Me.txt_file_gallery.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_gallery

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-hand-yg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ GALLERY: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 6, Application("config").connection_string)
                    Session("message").listbox.items.add("+ GALLERY: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- GALLERY: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- GALLERY: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- GALLERY: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If


        '--- BANNER BTA
        If Not IsNothing(Me.txt_file_banner.PostedFile) Then
            If Me.txt_file_banner.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_banner

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "_bnr" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ GALLERY: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 7, Application("config").connection_string)
                    Session("message").listbox.items.add("+ BANNER: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- BANNER: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- BANNER: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- BANNER: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If
        '__________________________________________________________________________________________
        ''yellow gold uses the -wg extention
        '--- PICTURE
        If Not IsNothing(Me.txt_file_picture2.PostedFile) Then
            If Me.txt_file_picture2.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_picture2

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-pic-wg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ PICTURE: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 1, Application("config").connection_string)
                    Session("message").listbox.items.add("+ PICTURE: saved file: " + cDirectory + cNewFileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- PICTURE: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- PICTURE: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- PICTURE: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If

        '--- HIRES-PICTURE
        If Not IsNothing(Me.txt_file_hrpicture2.PostedFile) Then
            If Me.txt_file_hrpicture2.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_hrpicture2

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-hires-wg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ HIRES: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 2, Application("config").connection_string)
                    Session("message").listbox.items.add("+ HIRES: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- HIRES: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- HIRES: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- HIRES: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If


        '--- ICON
        If Not IsNothing(Me.txt_file_icon2.PostedFile) Then
            If Me.txt_file_icon2.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_icon2

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-icon-wg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ ICON: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 3, Application("config").connection_string)
                    bError = UpdateMetalMediaRecord(nId, "wg", Application("config").connection_string)
                    Session("message").listbox.items.add("+ ICON: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- ICON: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- ICON: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- ICON: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If

        '--- MOVIE
        If Not IsNothing(Me.txt_file_movie2.PostedFile) Then
            If Me.txt_file_movie2.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_movie2

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-mov-wg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ MOVIE: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 4, Application("config").connection_string)
                    bError = UpdateMovieRecord(nId, 4, Application("config").connection_string)
                    Session("message").listbox.items.add("+ MOVIE: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- MOVIE: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- MOVIE: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- MOVIE: Error Not an IMAGE file: " + cNewFileName)
                    End Select
                End If
            End If
        End If


        '--- CERTIFICATE
        If Not IsNothing(Me.txt_file_report2.PostedFile) Then
            If Me.txt_file_report2.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_report2

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-report-all" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ CERTIFICATE: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 5, Application("config").connection_string)
                    Session("message").listbox.items.add("+ CERTIFICATE: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- CERTIFICATE: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- CERTIFICATE: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- CERTIFICATE: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If

        '--- GALLERY
        If Not IsNothing(Me.txt_file_gallery2.PostedFile) Then
            If Me.txt_file_gallery2.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_gallery2

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "-hand-wg" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ GALLERY: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 6, Application("config").connection_string)
                    Session("message").listbox.items.add("+ GALLERY: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- GALLERY: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- GALLERY: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- GALLERY: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If


        '--- BANNER BTA
        If Not IsNothing(Me.txt_file_banner2.PostedFile) Then
            If Me.txt_file_banner2.PostedFile.FileName <> "" Then
                '--- Assign the file object
                oFileObject = Me.txt_file_banner2

                '--- Create New FileName
                cFileExtension = System.IO.Path.GetExtension(oFileObject.PostedFile.FileName)
                cNewFileName = cItemNumber + "_bnr" + cFileExtension

                '--- Get Save Directory
                cDirectory = Application("defaults").ctg_categories(nItemCategory).direct_path

                '--- Upload file
                Session("message").listbox.items.add("+ GALLERY: Coping from: " + oFileObject.PostedFile.FileName)

                bError = sendfile(cNewFileName, cDirectory, oFileObject, nErrorType)
                If nErrorType = 0 Then     '--- everythinh id ok, update record
                    bError = UpdatePictureRecord(nId, cNewFileName, 7, Application("config").connection_string)
                    Session("message").listbox.items.add("+ BANNER: saved file: " + oFileObject.PostedFile.FileName + " to " + cNewFileName + " (" + System.Convert.ToString(oFileObject.PostedFile.ContentLength) + ")")
                Else
                    Select Case nErrorType
                        Case 1
                            Session("message").listbox.items.add("- BANNER: Error saving file: " + cNewFileName)
                        Case 2
                            Session("message").listbox.items.add("- BANNER: Error Not an IMAGE file: " + cNewFileName)
                        Case 3
                            Session("message").listbox.items.add("- BANNER: Error file larger then 0.5Mb: " + cNewFileName)
                    End Select
                End If
            End If
        End If

        Return False
        Exit Function

ErrorHandler:
        Me._err_number = Err.Number
        Me._err_description = Err.Description
        Me._err_source = Err.Source
        Return True

    End Function


    Private Function sendfile(ByVal cFile As String, ByVal cDirectory As String, ByVal oFileObject As System.Web.UI.HtmlControls.HtmlInputFile, ByRef nErrorType As Integer) As Boolean
        Dim bError As Boolean = False

        '--- Check the file size
        '' If oFileObject.PostedFile.ContentLength > 500000 Then
        '    '' nErrorType = 3
        ''    Return False
        ''End If

        '--- check if file is the correct format
        'If oFileObject.PostedFile.ContentType <> "image/pjpeg" And oFileObject.PostedFile.ContentType <> "video/mpeg" And oFileObject.PostedFile.ContentType <> "application/octet-stream" And oFileObject.PostedFile.ContentType <> "video/x-flv" Then
        '    nErrorType = 2
        '    Return False
        'End If


        '--- If File Exist delete it
        If System.IO.File.Exists(cDirectory + cFile) Then
            System.IO.File.Delete(cDirectory + cFile)
        End If



        '--- Upload file
        Try
            oFileObject.PostedFile.SaveAs(cDirectory + cFile)
            nErrorType = 0

        Catch Exp As Exception
            nErrorType = 1

        End Try

        Return False

        '---ERROR handled differently here
    End Function


    Private Function MainPlateView(ByVal bVisible) As Boolean
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        Me.Label4.Visible = bVisible
        Me.cmb_supplier.Visible = bVisible
        Me.Label41.Visible = bVisible
        Me.txt_itemnumber.Visible = bVisible
        Me.Label6.Visible = bVisible
        Me.txt_supplier_code.Visible = bVisible
        Me.Label9.Visible = bVisible
        Me.cmb_location.Visible = bVisible
        Me.Label56.Visible = bVisible
        Me.Label57.Visible = bVisible
        Me.Label58.Visible = bVisible
        Me.Label59.Visible = bVisible
        Me.Label5.Visible = bVisible
        Me.Label15.Visible = bVisible
        Me.Label10.Visible = bVisible
        Me.Label28.Visible = bVisible
        Me.Label11.Visible = bVisible
        Me.Label1.Visible = bVisible
        Me.Label2.Visible = bVisible
        Me.Label7.Visible = bVisible
        Me.Label8.Visible = bVisible
        Me.cmb_category.Visible = bVisible
        Me.Label12.Visible = bVisible
        Me.cmb_subcategory.Visible = bVisible
        Me.Label20.Visible = bVisible
        Me.txt_purchase_price.Visible = bVisible
        Me.Label42.Visible = bVisible
        Me.Label19.Visible = bVisible
        Me.txt_sell_price.Visible = bVisible
        Me.Label44.Visible = bVisible
        Me.Label18.Visible = bVisible
        Me.txt_dealer_price.Visible = bVisible
        Me.Label43.Visible = bVisible
        Me.Label17.Visible = bVisible
        Me.txt_appraisal_price.Visible = bVisible
        Me.Label45.Visible = bVisible
        Me.Label22.Visible = bVisible
        Me.txt_stock_curr.Visible = bVisible
        Me.Label23.Visible = bVisible
        Me.txt_stock_min.Visible = bVisible
        Me.Label33.Visible = bVisible
        Me.chk_active_in_shop.Visible = bVisible
        Me.Label34.Visible = bVisible
        Me.chk_deleted.Visible = bVisible
        Me.Label35.Visible = bVisible
        Me.chk_cannot_be_ordered_alone.Visible = bVisible
        Me.Label36.Visible = bVisible
        Me.chk_on_local_auction.Visible = bVisible
        Me.Label37.Visible = bVisible
        Me.chk_not_in_public_auction.Visible = bVisible
        Me.Label38.Visible = bVisible
        Me.chk_in_process.Visible = bVisible
        Me.Label40.Visible = bVisible
        Me.Label24.Visible = bVisible
        Me.Label25.Visible = bVisible
        Me.Label26.Visible = bVisible
        Me.Label27.Visible = bVisible
        Me.Label29.Visible = bVisible
        Me.Label30.Visible = bVisible
        Me.cmb_language1.Visible = bVisible
        Me.txt_language1.Visible = bVisible
        Me.txt_language2.Visible = bVisible
        Me.txt_language3.Visible = bVisible
        Me.txt_language4.Visible = bVisible
        Me.txt_language5.Visible = bVisible
        Me.txt_language6.Visible = bVisible
        Me.txt_indexwords.Visible = bVisible
        Me.Label31.Visible = bVisible
        Me.Label32.Visible = bVisible
        Me.Label46.Visible = bVisible
        Me.Label47.Visible = bVisible
        Me.Label48.Visible = bVisible
        Me.Label3.Visible = bVisible
        Me.txt_notes.Visible = bVisible
        Me.RangeValidator1.Visible = bVisible
        Me.RangeValidator2.Visible = bVisible
        Me.RangeValidator3.Visible = bVisible
        Me.RangeValidator4.Visible = bVisible
        Me.Label49.Visible = bVisible
        Me.Label50.Visible = bVisible
        Me.RangeValidator8.Visible = bVisible
        Me.RangeValidator7.Visible = bVisible
        Me.txt_lastuser_id.Visible = bVisible
        Me.txt_lastuser_datetime.Visible = bVisible
        Me.txt_lastuser_name.Visible = bVisible
        Me.tbl_main.Visible = bVisible
        Me.Label53.Visible = bVisible
        Me.RangeValidator9.Visible = bVisible
        Me.Label54.Visible = bVisible
        Me.Label55.Visible = bVisible
        Me.RangeValidator10.Visible = bVisible
        Me.txt_special_dealer_price.Visible = bVisible
        Me.txt_special_sell_price.Visible = bVisible
        Me.txt_special_to_date.Visible = bVisible
        Me.txt_special_from_date.Visible = bVisible
        Me.Label13.Visible = bVisible
        Me.chk_item_special.Visible = bVisible
        Me.labael.Visible = bVisible
        Me.txt_branch.Visible = bVisible
        Me.Label14.Visible = bVisible
        Me.cmb_status.Visible = bVisible
        Me.cmb_language2.Visible = bVisible
        Me.cmb_language3.Visible = bVisible
        Me.cmb_language4.Visible = bVisible
        Me.cmb_language5.Visible = bVisible
        Me.cmb_language6.Visible = bVisible
        Me.lst_error.Visible = bVisible
        Me.btn_submit.Visible = bVisible
        Me.txt_file_picture.Visible = bVisible
        Me.txt_file_movie.Visible = bVisible
        Me.txt_file_report.Visible = bVisible
        Me.txt_file_icon.Visible = bVisible
        Me.txt_file_hrpicture.Visible = bVisible
        Me.txt_file_gallery.Visible = bVisible
        Me.txt_file_banner.Visible = bVisible
'        Me.txt_hdn_picture.Visible = bVisible
'        Me.txt_hdn_hrpicture.Visible = bVisible
'        Me.txt_hdn_icon.Visible = bVisible
'        Me.txt_hdn_movie.Visible = bVisible
'        Me.txt_hdn_report.Visible = bVisible
'        Me.txt_hdn_gallery.Visible = bVisible
'        Me.txt_hdn_banner.Visible = bVisible
        Me.txt_similaritems.Visible = bVisible
        'Me.vld_date_from.Visible = bVisible
        'Me.vld_date_to.Visible = bVisible

        Return False
        Exit Function

ErrorHandler:
        Me._err_number = Err.Number
        Me._err_description = Err.Description
        Me._err_source = Err.Source
        Return True

    End Function

    Private Sub btn_submit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_submit.Click
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        '--- Validate info
        Dim bValid As Boolean
        bError = Me.validate_form(bValid)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "btn_save_Click [validate_form]"
            Server.Transfer("/aspxerror.aspx")
        End If


        '--- If form not valid then show the error list 
        If Not bValid Then
            Me.lst_error.Visible = True
            Exit Sub
        Else
            Me.lst_error.Visible = False
        End If


        '--- Map fields
        Dim oTmpPlate As New ion_two.skl_inventory

        oTmpPlate._id = Convert.ToInt32(Me.hid_item_id.Text)
        oTmpPlate._platetype = Convert.ToInt32(Me.hid_plate_id.Text)
        oTmpPlate._category_id = Convert.ToInt32(Me.cmb_category.SelectedItem.Value)
        oTmpPlate._subcategory_id = Convert.ToInt32(Me.cmb_subcategory.SelectedItem.Value)
        oTmpPlate._location_id = Convert.ToInt32(Me.cmb_location.SelectedItem.Value)
        oTmpPlate._branchnumber = Convert.ToInt32(Me.hid_branch_id.Text)
        'oTmpPlate._itemnumberint = 0
        oTmpPlate._suppliernumber = Convert.ToInt32(Me.cmb_supplier.SelectedItem.Value)
        oTmpPlate._itemcode = Convert.ToString(txt_supplier_code.Text.Trim)
        oTmpPlate._active = Convert.ToBoolean(Me.chk_active_in_shop.Checked)
        oTmpPlate._deleted = Convert.ToBoolean(Me.chk_deleted.Checked)
        oTmpPlate._no_orderalone = Convert.ToBoolean(Me.chk_cannot_be_ordered_alone.Checked)
        oTmpPlate._no_publicauction = Convert.ToBoolean(Me.chk_not_in_public_auction.Checked)
        oTmpPlate._status_id = Convert.ToInt32(Me.cmb_status.SelectedItem.Value)
        oTmpPlate._lang1_description = Convert.ToString(Me.txt_language1.Text.Trim)
        oTmpPlate._lang2_description = Convert.ToString(Me.txt_language2.Text.Trim)
        oTmpPlate._lang3_description = Convert.ToString(Me.txt_language3.Text.Trim)
        oTmpPlate._lang4_description = Convert.ToString(Me.txt_language4.Text.Trim)
        oTmpPlate._lang5_description = Convert.ToString(Me.txt_language5.Text.Trim)
        oTmpPlate._lang6_description = Convert.ToString(Me.txt_language6.Text.Trim)
        oTmpPlate._createdate = Convert.ToDateTime(Now)
        oTmpPlate._onprocess = Convert.ToBoolean(Me.chk_in_process.Checked)
        oTmpPlate._onauction = Convert.ToBoolean(Me.chk_on_local_auction.Checked)
        oTmpPlate._club_item = Convert.ToBoolean(Me.chk_clubitem.Checked)
        oTmpPlate._onspecial = Convert.ToBoolean(Me.chk_item_special.Checked)
        oTmpPlate._onspecial_from_date = Convert.ToDateTime(Me.txt_special_from_date.Text)
        oTmpPlate._onspecial_to_date = Convert.ToDateTime(Me.txt_special_to_date.Text)
        oTmpPlate._qtyonstock_cur = Convert.ToInt32(Me.txt_stock_curr.Text)
        oTmpPlate._qtyonstock_min = Convert.ToInt32(Me.txt_stock_min.Text)
        oTmpPlate._purchase_price = Convert.ToDecimal(Me.txt_purchase_price.Text)
        oTmpPlate._appraisal_price = Convert.ToDecimal(Me.txt_appraisal_price.Text)
        oTmpPlate._dealer_price = Convert.ToDecimal(Me.txt_dealer_price.Text)
        oTmpPlate._sell_price = Convert.ToDecimal(Me.txt_sell_price.Text)
        oTmpPlate._special_sell_price = Convert.ToDecimal(Me.txt_special_sell_price.Text)
        oTmpPlate._special_dealer_price = Convert.ToDecimal(Me.txt_special_dealer_price.Text)
        oTmpPlate._notes = Convert.ToString(Me.txt_notes.Text.Trim)
        oTmpPlate._remarks = Convert.ToString(Me.txt_remarks.Text.Trim)
        oTmpPlate._indexwords = Convert.ToString(Me.txt_indexwords.Text.Trim)
        oTmpPlate._lastmodify_user = Convert.ToString(Session("user").user_name)
        oTmpPlate._lastmodify_date = Convert.ToDateTime(Now)
        oTmpPlate._lastmodify_user_id = Convert.ToInt32(Session("user").user_id)
        oTmpPlate._icon_pic = Convert.ToString(Me.txt_hdn_icon_wg.Text)
        oTmpPlate._picture_pic = Convert.ToString(Me.txt_hdn_picture_wg.Text)
        oTmpPlate._picture_hires_pic = Convert.ToString(Me.txt_hdn_hrpicture_wg.Text)
        oTmpPlate._certificate_pic = Convert.ToString(Me.txt_hdn_report_wg.Text)
        oTmpPlate._movie_pic = Convert.ToString(Me.txt_hdn_movie_wg.Text)
        oTmpPlate._gallery_pic = Convert.ToString(Me.txt_hdn_gallery_wg.Text)
        oTmpPlate._banner_pic = Convert.ToString(Me.txt_hdn_banner_wg.Text)
        oTmpPlate._similar_items = Convert.ToString(Me.txt_similaritems.Text)
        oTmpPlate._autogenerated = Convert.ToBoolean(Me.chk_autogenerated.Checked)
        oTmpPlate._item_sold = Convert.ToBoolean(Me.chk_itemsold.Checked)
        oTmpPlate.onbargain = Convert.ToBoolean(Me.chk_bargain.Checked)
        oTmpPlate.samplepic = Convert.ToBoolean(Me.chk_samplepic.Checked)
        oTmpPlate.featured = Convert.ToBoolean(Me.chk_featured.Checked)

        oTmpPlate.has_white_gold = Convert.ToBoolean(Me.hid_has_whitegold.Text)
        oTmpPlate.has_yellow_gold = Convert.ToBoolean(Me.hid_has_yellowgold.Text)

        '' oTmpPlate.h

        oTmpPlate.opthash("extraopen") = Convert.ToInt32(Convert.ToBoolean(Me.chk_extraopen.Checked))
        oTmpPlate.opthash("bestoffer") = Convert.ToInt32(Convert.ToBoolean(Me.chk_bestoffer.Checked))
        If Me.cmb_payments.SelectedIndex = 0 Then
            oTmpPlate.opthash("usepayments") = "0"
        Else
            oTmpPlate.opthash("usepayments") = "1"
            oTmpPlate.opthash("payments") = Me.cmb_payments.SelectedValue
        End If

        If Me.smartsort_text.Text <> "" Then oTmpPlate._smartsort_txt = Me.smartsort_text.Text
        If Me.chk_on_local_auction.Checked Then
            oTmpPlate.release_date = Convert.ToDateTime(Me.txt_auction_release.Text)
            If IsNumeric(Me.txt_auction_minbid.Text) Then
                oTmpPlate.auction_price = Convert.ToDecimal(Me.txt_auction_minbid.Text)
            End If
        Else
            oTmpPlate.release_date = Now()
        End If


        '--- Get SUBplate type
        Dim oSubPlate As Object
        bError = Me.get_subplate_object(Me.hid_plate_id.Text, oSubPlate)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "loadPlate [get_subplate_object]"
            Server.Transfer("/aspxerror.aspx")
        End If


        '--- Load SUBplate

        bError = oSubPlate.set_plate(oTmpPlate)
        If bError Then
            Session("o_error")._Err_Number = oSubPlate._err_number
            Session("o_error")._Err_Description = oSubPlate._err_description
            Session("o_error")._Err_Source = oSubPlate._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "loadPlate [get_plate]"
            Server.Transfer("/aspxerror.aspx")
        End If

        '--------opthash from subplates
        Select Case oTmpPlate._platetype
            Case 1
            Case 2
            Case 3

                Dim txt1 As WebControls.TextBox = oSubPlate.findcontrol("txt_bend_from")
                Dim txt2 As WebControls.TextBox = oSubPlate.findcontrol("txt_bend_to")
                If txt1.Text <> "" Then
                    oTmpPlate.opthash("bend_from") = txt1.Text
                    oTmpPlate.opthash("bend_to") = txt2.Text

                End If

                Dim ebay_title As WebControls.TextBox = oSubPlate.findcontrol("txt_ebay_title")
                If ebay_title.Text <> "" Then
                    oTmpPlate.opthash("ebaytitle") = ebay_title.Text
                End If

                'Dim default_model As WebControls.CheckBox = oSubPlate.findcontrol("chk_default_model")


                'If default_model.Checked Then
                '    oTmpPlate.opthash("defaultmodel") = "1"
                'End If

        End Select


        '--- SAVE
        Dim oTmpInventoryLogics As New ion_two.cls_inventory_lgc
        oTmpInventoryLogics._connection_string = Application("config").connection_string
        oTmpInventoryLogics._dbtype = Application("config").connection_string_type

        Select Case Convert.ToInt32(Me.hid_workmode.Text)
            Case 1    '--- ADD
                bError = oTmpInventoryLogics.insert(oTmpPlate)
                If bError Then
                    Session("o_error")._Err_Number = oTmpInventoryLogics._err_number
                    Session("o_error")._Err_Description = oTmpInventoryLogics._err_description
                    Session("o_error")._Err_Source = oTmpInventoryLogics._err_source
                    Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                    Session("o_error")._Err_Call = "btn_submit_Click [ion_two.cls_inventory_lgc:insert]"
                    Server.Transfer("/aspxerror.aspx")
                End If
                Session("message").returnpath = "/default.aspx"

            Case 2    '--- EDIT
                bError = oTmpInventoryLogics.update(oTmpPlate)
                If bError Then
                    Session("o_error")._Err_Number = oTmpInventoryLogics._err_number
                    Session("o_error")._Err_Description = oTmpInventoryLogics._err_description
                    Session("o_error")._Err_Source = oTmpInventoryLogics._err_source
                    Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                    Session("o_error")._Err_Call = "btn_submit_Click [ion_two.cls_inventory_lgc:insert]"
                    Server.Transfer("/aspxerror.aspx")
                End If
                Session("message").returnpath = "/inventory/listitem.aspx"

        End Select

        '--- Notify Iten number
        Session("message").listbox.items.add("Item saved: " + oTmpPlate._itemnumber + "  (" + Convert.ToString(oTmpPlate._id) + ")")


        '--- If no Error, process the form
        Me.lst_error.Visible = False


        Dim nItemId As Integer = 0
        Dim cItemNumber As String = ""
        Dim nItemCategory As Integer = 0


        '--- Upload files
        Dim nErrorType As Integer = 0
        bError = Me.uploadfiles(oTmpPlate._id, oTmpPlate._itemnumber, oTmpPlate._category_id)
        If bError Then
            If bError Then
                Session("o_error")._Err_Number = Me._err_number
                Session("o_error")._Err_Description = Me._err_description
                Session("o_error")._Err_Source = Me._err_source
                Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                Session("o_error")._Err_Call = "btn_submit_Click [uploadfiles]"
                Server.Transfer("/aspxerror.aspx")
            End If
        End If

        bError = MainPlateView(False)
        If bError Then
            Server.Transfer("/apperror.aspx")
        End If

        cnt_diamonds.Visible = False
        cnt_gemstones.Visible = False
        cnt_jewelry.Visible = False

        Server.Transfer("/message.aspx")

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_submit_Click [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub


    Private Sub btn_file_picture_delete_ServerClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_file_picture_delete.ServerClick
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Me.txt_hdn_picture_wg.Text <> "" Then
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            bError = UpdatePictureRecord(nId, "", 1, Application("config").connection_string)
            If bError Then
                Server.Transfer("/apperror.aspx")
            End If
            Me.txt_hdn_picture_wg.Text = ""
        End If

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_picture_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub


    Private Sub btn_file_hrpicture_delete_ServerClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_file_hrpicture_delete.ServerClick
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Me.txt_hdn_hrpicture_wg.Text <> "" Then
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            bError = UpdatePictureRecord(nId, "", 2, Application("config").connection_string)
            If bError Then
                Server.Transfer("/apperror.aspx")
            End If

            Me.txt_hdn_hrpicture_wg.Text = ""
        End If

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_hrpicture_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub btn_file_icon_delete_ServerClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_file_icon_delete.ServerClick
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Me.txt_hdn_icon_wg.Text <> "" Then
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            bError = UpdatePictureRecord(nId, "", 3, Application("config").connection_string)
            If bError Then
                Server.Transfer("/apperror.aspx")
            End If

            Me.txt_hdn_icon_wg.Text = ""
        End If

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_icon_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub btn_file_movie_delete_ServerClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_file_movie_delete.ServerClick
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Me.txt_hdn_movie_wg.Text <> "" Then
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            bError = UpdatePictureRecord(nId, "", 4, Application("config").connection_string)
            If bError Then
                Server.Transfer("/apperror.aspx")
            End If

            Me.txt_hdn_movie_wg.Text = ""
        End If

        Exit Sub


ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_movie_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub btn_file_report_delete_ServerClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_file_report_delete.ServerClick
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Me.txt_hdn_report_wg.Text <> "" Then
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            bError = UpdatePictureRecord(nId, "", 5, Application("config").connection_string)
            If bError Then
                Server.Transfer("/apperror.aspx")
            End If

            Me.txt_hdn_report_wg.Text = ""
        End If

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_report_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub txt_purchase_price_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_purchase_price.TextChanged
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If IsNumeric(Me.txt_purchase_price.Text) Then
            Dim nPurchasePrice As Decimal = Me.txt_purchase_price.Text / 100
            Me.txt_sell_price.Text = nPurchasePrice * Application("defaults").inv_sellprice
            Me.txt_dealer_price.Text = nPurchasePrice * Application("defaults").inv_dealerprice
            Me.txt_appraisal_price.Text = nPurchasePrice * Application("defaults").inv_appraisalprice
            Me.txt_special_sell_price.Text = nPurchasePrice * Application("defaults").inv_spc_sellprice
            Me.txt_special_dealer_price.Text = nPurchasePrice * Application("defaults").inv_spc_dealerprice
        Else
            sender.text = 0.0
        End If

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "txt_purchase_price_TextChanged [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub Page_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.PreRender
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False


        '--- Adjust view of currency fields
        Dim nPurchasePrice As Decimal = Convert.ToDecimal(Me.txt_purchase_price.Text)
        Dim nAppraisalPrice As Decimal = Convert.ToDecimal(Me.txt_appraisal_price.Text)
        Dim nDealerPrice As Decimal = Convert.ToDecimal(Me.txt_dealer_price.Text)
        Dim nSellPrice As Decimal = Convert.ToDecimal(Me.txt_sell_price.Text)
        Dim nSpecialSellPrice As Decimal = Convert.ToDecimal(Me.txt_special_sell_price.Text)
        Dim nSpecialDealerPrice As Decimal = Convert.ToDecimal(Me.txt_special_dealer_price.Text)

        Me.txt_purchase_price.Text = Format(nPurchasePrice, "##,##0")
        Me.txt_appraisal_price.Text = Format(nAppraisalPrice, "##,##0")
        Me.txt_dealer_price.Text = Format(nDealerPrice, "##,##0")
        Me.txt_sell_price.Text = Format(nSellPrice, "##,##0")
        Me.txt_special_sell_price.Text = Format(nSpecialSellPrice, "##,##0")
        Me.txt_special_dealer_price.Text = Format(nSpecialDealerPrice, "##,##0")


        '--- Define defaults for special-dates Validators
'        Me.vld_date_from.MinimumValue = CStr(Today.Date)
'        Me.vld_date_from.MaximumValue = CStr(DateAdd(DateInterval.Day, Application("defaults").inv_advance_special_date, Today.Date))
'
'        Me.vld_date_to.MinimumValue = CStr(Today.Date)
'        Me.vld_date_to.MaximumValue = CStr(DateAdd(DateInterval.Day, Application("defaults").inv_active_special_date, Today.Date))
'
'        If Me.chk_item_special.Checked Then
'            'Me.vld_date_from.Enabled = True
'            Me.vld_date_from.Enabled = False
'
'            Me.vld_date_to.Enabled = True
'            Me.vld_date_to.Validate()
'
'        Else
'            Me.vld_date_from.Enabled = False
'            Me.vld_date_to.Enabled = False
'
'        End If


        '--- 
        Dim dSpecialFrom As DateTime = Me.txt_special_from_date.Text
        Dim dSpecialTo As DateTime = Me.txt_special_to_date.Text

        Dim diff2 As System.TimeSpan
        diff2 = dSpecialTo.Subtract(dSpecialFrom)

        Dim nSpecialDays As Int32 = diff2.Days
        Me.txt_specialdays.Text = Convert.ToString(nSpecialDays) + " days"


        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "Page_PreRender [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub


    Private Sub cmb_category_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cmb_category.SelectedIndexChanged
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        Dim oTmpCombo As New iFunctions.cls_combo
        oTmpCombo._connection_string = Application("config").connection_string
        oTmpCombo._dbtype = Application("config").connection_string_type


        '--- fill CATEGORIES combo
        oTmpCombo._combobox = Me.cmb_subcategory
        oTmpCombo._sqlstring = "select id, lang" & Session("user").language & "_longdescr from inv_SUBCATEGORIES where active = 1 and category_id= " & Me.cmb_category.SelectedItem.Value & " order by sortorder"
        oTmpCombo._textfield = "lang" & Session("user").language & "_longdescr"
        oTmpCombo._valuefield = "id"
        oTmpCombo._addrow = ""
        bError = oTmpCombo.BindCombo()
        If bError Then
            Session("o_error")._Err_Number = oTmpCombo._err_number
            Session("o_error")._Err_Description = oTmpCombo._err_description
            Session("o_error")._Err_Source = oTmpCombo._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "cmb_category_SelectedIndexChanged [BindCombo]"
            Server.Transfer("/aspxerror.aspx")
        End If

        '--- Release
        oTmpCombo = Nothing


        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "cmb_category_SelectedIndexChanged [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")


    End Sub

    Private Function validate_form(ByRef bValid As Boolean) As Boolean
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        '--- We assume everything is OK until we find a problem
        bValid = True
        Me.lst_error.Items.Clear()


        '--- Check numeric valeus
        If Me.txt_sell_price.Text = "" Then
            Me.txt_sell_price.Text = 0
        End If

        If Me.txt_dealer_price.Text = "" Then
            Me.txt_dealer_price.Text = 0
        End If

        If Me.txt_appraisal_price.Text = "" Then
            Me.txt_appraisal_price.Text = 0
        End If

        If Me.txt_special_dealer_price.Text = "" Then
            Me.txt_special_dealer_price.Text = 0
        End If

        If Me.txt_special_sell_price.Text = "" Then
            Me.txt_special_sell_price.Text = 0
        End If

        If Me.txt_stock_curr.Text = "" Then
            Me.txt_stock_curr.Text = 0
        End If

        If Me.txt_stock_min.Text = "" Then
            Me.txt_stock_min.Text = 0
        End If

        '--- Validate form
        Me.lst_error.Items.Add("Validation Errors encountered!!!")

        If System.Convert.ToDecimal(Me.txt_sell_price.Text) < System.Convert.ToDecimal(Me.txt_purchase_price.Text) Then
            Me.lst_error.Items.Add("- SELL-PRICE cannot be lower then PURCHASE-PRICE")
            bValid = False
        End If

        If System.Convert.ToDecimal(Me.txt_dealer_price.Text) < System.Convert.ToDecimal(Me.txt_purchase_price.Text) Then
            Me.lst_error.Items.Add("- DEALER-PRICE cannot be lower then PURCHASE-PRICE")
            bValid = False
        End If

        If System.Convert.ToDecimal(Me.txt_appraisal_price.Text) < System.Convert.ToDecimal(Me.txt_purchase_price.Text) Then
            Me.lst_error.Items.Add("- APPRAISAL-PRICE cannot be lower then PURCHASE-PRICE")
            bValid = False
        End If

        If System.Convert.ToDecimal(Me.txt_dealer_price.Text) > System.Convert.ToDecimal(Me.txt_sell_price.Text) Then
            Me.lst_error.Items.Add("- DEALER-PRICE cannot be higher then SELL-PRICE")
            bValid = False
        End If

        If System.Convert.ToDecimal(Me.txt_appraisal_price.Text) < System.Convert.ToDecimal(Me.txt_sell_price.Text) Then
            Me.lst_error.Items.Add("- APPRAISAL-PRICE cannot be lower then SELL-PRICE")
            bValid = False
        End If

        If Me.chk_item_special.Checked Then

            If System.Convert.ToDecimal(Me.txt_special_dealer_price.Text) < System.Convert.ToDecimal(Me.txt_purchase_price.Text) Then
                Me.lst_error.Items.Add("- SPECIAL-DEALER-PRICE cannot be lower then PURCHASE-PRICE")
                bValid = False
            End If

            If System.Convert.ToDecimal(Me.txt_special_sell_price.Text) < System.Convert.ToDecimal(Me.txt_purchase_price.Text) Then
                Me.lst_error.Items.Add("- SPECIAL-SELL-PRICE cannot be lower then PURCHASE-PRICE")
                bValid = False
            End If

            If System.Convert.ToDecimal(Me.txt_special_sell_price.Text) > System.Convert.ToDecimal(Me.txt_sell_price.Text) Then
                Me.lst_error.Items.Add("- SPECIAL-SELL-PRICE must be lower then regular SELL-PRICE")
                bValid = False
            End If

            If System.Convert.ToDecimal(Me.txt_special_dealer_price.Text) > System.Convert.ToDecimal(Me.txt_dealer_price.Text) Then
                Me.lst_error.Items.Add("- SPECIAL-DEALER-PRICE must be lower then regular DEALER-PRICE")
                bValid = False
            End If

            If System.Convert.ToDecimal(Me.txt_special_dealer_price.Text) > System.Convert.ToDecimal(Me.txt_special_sell_price.Text) Then
                Me.lst_error.Items.Add("- SPECIAL-DEALER-PRICE must be lower then regular SPECIAL-SELL-PRICE")
                bValid = False
            End If

            If System.Convert.ToDateTime(Me.txt_special_from_date.Text) > System.Convert.ToDateTime(Me.txt_special_to_date.Text) Then
                Me.lst_error.Items.Add("- SPECIAL-FROM-DATE must be an earlier then SPECIAL-TO-DATE")
                bValid = False
            End If

        End If


        Select Case Convert.ToInt32(Me.hid_plate_id.Text)
            Case 1
                Me.cnt_diamonds.validate_form(bValid, Me.lst_error)

            Case 2
                Me.cnt_gemstones.validate_form(bValid, Me.lst_error)

            Case 3
                Me.cnt_jewelry.validate_form(bValid, Me.lst_error)

        End Select

        Return False
        Exit Function

ErrorHandler:
        Me._err_number = Err.Number
        Me._err_description = Err.Description
        Me._err_source = Err.Source
        Return True

    End Function


    Private Function get_subplate_object(ByVal nPlateType As Int32, ByRef oSubPlate As Object) As Boolean
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False


        Select Case nPlateType
            Case 1
                Dim cnt_subplate As sp_diamonds
                oSubPlate = Me.FindControl("sp_diamonds1")

            Case 2
                Dim cnt_subplate As sp_diamonds
                oSubPlate = Me.FindControl("sp_gemstones1")

            Case 3
                Dim cnt_subplate As sp_diamonds
                oSubPlate = Me.FindControl("sp_jewelry1")
        End Select


        Return False
        Exit Function

ErrorHandler:
        Me._err_number = Err.Number
        Me._err_description = Err.Description
        Me._err_source = Err.Source
        Return True

    End Function


    Private Sub btn_file_gallery_delete_ServerClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_file_gallery_delete.ServerClick
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Me.txt_hdn_gallery_wg.Text <> "" Then
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            bError = UpdatePictureRecord(nId, "", 6, Application("config").connection_string)
            If bError Then
                Server.Transfer("/apperror.aspx")
            End If

            Me.txt_hdn_gallery_wg.Text = ""
        End If

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_banner_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub btn_file_banner_delete_ServerClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_file_banner_delete.ServerClick
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Me.txt_hdn_banner_wg.Text <> "" Then
            Dim nId As Int32 = Convert.ToInt32(Request.QueryString("id"))
            bError = UpdatePictureRecord(nId, "", 7, Application("config").connection_string)
            If bError Then
                Server.Transfer("/apperror.aspx")
            End If

            Me.txt_hdn_banner_wg.Text = ""
        End If

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_banner_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub chk_item_special_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk_item_special.CheckedChanged
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        Dim dSpecialFromDate As DateTime = Convert.ToDateTime(Me.txt_special_from_date.Text)
        Dim dSpecialToDate As DateTime = Convert.ToDateTime(Me.txt_special_to_date.Text)

        If dSpecialToDate > dSpecialFromDate Then


        End If

        'Me.vld_date_from.MinimumValue = CStr(Today.Date)
        'Me.vld_date_from.MaximumValue = CStr(DateAdd(DateInterval.Day, Application("defaults").inv_advance_special_date, Today.Date))
        'Me.vld_date_to.MinimumValue = CStr(Today.Date)
        'Me.vld_date_to.MaximumValue = CStr(DateAdd(DateInterval.Day, Application("defaults").inv_active_special_date, Today.Date))



        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_banner_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub txt_copyid_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_copyid.TextChanged
        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        If Not IsNumeric(Me.txt_copyid.Text) Then
            Exit Sub
        End If

        If Not Convert.ToInt32(Me.txt_copyid.Text) > 0 Then
            Exit Sub
        End If

        '--- Define Plate skelet
        Dim oPlateSkelet As New ion_two.skl_inventory

        '--- Define logics and get the plate
        Dim oTmpPlateLogics As New ion_two.cls_inventory_lgc
        oTmpPlateLogics._connection_string = Application("config").connection_string
        oTmpPlateLogics._dbtype = Application("config").connection_string_type
        bError = oTmpPlateLogics.read(Convert.ToInt32(Me.txt_copyid.Text), oPlateSkelet)
        If bError Then
            If oTmpPlateLogics._err_number = 7003 Then
                Me.lbl_copyid_message.Text = "No item found"
                bError = False
                Exit Sub
            End If

            Session("o_error")._Err_Number = oTmpPlateLogics._err_number
            Session("o_error")._Err_Description = oTmpPlateLogics._err_description
            Session("o_error")._Err_Source = oTmpPlateLogics._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "GetPlate [load_combos]"
            Server.Transfer("/aspxerror.aspx")
        End If

        '--- Map Vars if they exist
        'Me.hid_branch_id.Text = oPlateSkelet._branchnumber
        'Me.hid_plate_id.Text = oPlateSkelet._platetype


        If oPlateSkelet._platetype <> Me.hid_plate_id.Text Then
            Select Case Me.hid_plate_id.Text
                Case 0
                    Me.lbl_copyid_message.Text = "No item found"

                Case 1
                    Me.lbl_copyid_message.Text = "Item must be a DIAMOND"

                Case 2
                    Me.lbl_copyid_message.Text = "Item must be a GEMSTONE"

                Case 3
                    Me.lbl_copyid_message.Text = "Item must be JEWELRY"

            End Select

            Exit Sub

        End If

        '--- Load combo boxes
        bError = Me.load_combos(2, oPlateSkelet._platetype, oPlateSkelet._category_id)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "GetPlate [load_combos]"
            Server.Transfer("/aspxerror.aspx")
        End If
        oTmpPlateLogics = Nothing


        '--- Load Plate to screen
        bError = Me.LoadPlate(oPlateSkelet)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "Page_Load [GetPlate]"
            Server.Transfer("/aspxerror.aspx")
        End If

        '--- Show Branch name

        '### OLD ROUTINE ###'
        '--- Prduce branch number from field in DB
        Dim oTmpItem As New ion_resources.cls_itemnumber
        Dim oError As New cls_error
        oTmpItem.connection_string = Application("config").connection_string
        oTmpItem.branch = oPlateSkelet._branchnumber
        bError = oTmpItem.GetBranchName(Me.txt_branch.Text)
        If bError Then
            Session("o_error")._Err_Number = oError.err_number
            Session("o_error")._Err_Description = oError.err_description
            Session("o_error")._Err_Source = oError.err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "GetPlate [GetBranchName]"
            Server.Transfer("/aspxerror.aspx")
        End If
        oTmpItem = Nothing
        '###################'

        If Not Me.chk_withpictures.Checked Then
'
'            Me.txt_hdn_picture.Text = ""
'            Me.txt_file_picture.Disabled = False
'            Me.txt_hdn_picture.Visible = False
'
'
'            Me.txt_hdn_hrpicture.Text = ""
'            Me.txt_file_hrpicture.Disabled = False
'            Me.txt_hdn_hrpicture.Visible = False
'
'
'            Me.txt_hdn_icon.Text = ""
'            Me.txt_file_icon.Disabled = False
'            Me.txt_hdn_icon.Visible = False
'
'            Me.txt_hdn_movie.Text = ""
'            Me.txt_file_movie.Disabled = False
'            Me.txt_hdn_movie.Visible = False
'
'            Me.txt_hdn_report.Text = ""
'            Me.txt_file_report.Disabled = False
'            Me.txt_hdn_report.Visible = False
'
'            Me.txt_hdn_gallery.Text = ""
'            Me.txt_file_gallery.Disabled = False
'            Me.txt_hdn_gallery.Visible = False
'
'
'            Me.txt_hdn_banner.Text = ""
'            Me.txt_file_banner.Disabled = False
'            Me.txt_hdn_banner.Visible = False

        End If

        oPlateSkelet = Nothing
        oTmpPlateLogics = Nothing

        Exit Sub

ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_file_banner_delete_ServerClick [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub smartsort_combo_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles smartsort_combo.SelectedIndexChanged
        smartsort_text.Text = smartsort_combo.SelectedItem.Text
    End Sub

    Private Sub chk_on_local_auction_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk_on_local_auction.CheckedChanged

    End Sub

    Private Sub Checkbox1_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub cmb_supplier_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmb_supplier.SelectedIndexChanged

    End Sub

    Private Sub go_replicate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles go_replicate.Click


        On Error GoTo ErrorHandler
        Dim bError As Boolean = False

        '--- Validate info
        Dim bValid As Boolean
        bError = Me.validate_form(bValid)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "btn_save_Click [validate_form]"
            Server.Transfer("/aspxerror.aspx")
        End If


        '--- If form not valid then show the error list 
        If Not bValid Then
            Me.lst_error.Visible = True
            Exit Sub
        Else
            Me.lst_error.Visible = False
        End If


        '--- Map fields
        Dim oTmpPlate As New ion_two.skl_inventory

        oTmpPlate._id = Convert.ToInt32(Me.hid_item_id.Text)
        oTmpPlate._platetype = Convert.ToInt32(Me.hid_plate_id.Text)
        oTmpPlate._category_id = Convert.ToInt32(Me.cmb_category.SelectedItem.Value)
        oTmpPlate._subcategory_id = Convert.ToInt32(Me.cmb_subcategory.SelectedItem.Value)
        oTmpPlate._location_id = Convert.ToInt32(Me.cmb_location.SelectedItem.Value)
        oTmpPlate._branchnumber = Convert.ToInt32(Me.hid_branch_id.Text)
        'oTmpPlate._itemnumberint = 0
        oTmpPlate._suppliernumber = Convert.ToInt32(Me.cmb_supplier.SelectedItem.Value)
        oTmpPlate._itemcode = Convert.ToString(txt_supplier_code.Text.Trim)
        oTmpPlate._active = Convert.ToBoolean(Me.chk_active_in_shop.Checked)
        oTmpPlate._deleted = Convert.ToBoolean(Me.chk_deleted.Checked)
        oTmpPlate._no_orderalone = Convert.ToBoolean(Me.chk_cannot_be_ordered_alone.Checked)
        oTmpPlate._no_publicauction = Convert.ToBoolean(Me.chk_not_in_public_auction.Checked)
        oTmpPlate._status_id = Convert.ToInt32(Me.cmb_status.SelectedItem.Value)
        oTmpPlate._lang1_description = Convert.ToString(Me.txt_language1.Text.Trim)
        oTmpPlate._lang2_description = Convert.ToString(Me.txt_language2.Text.Trim)
        oTmpPlate._lang3_description = Convert.ToString(Me.txt_language3.Text.Trim)
        oTmpPlate._lang4_description = Convert.ToString(Me.txt_language4.Text.Trim)
        oTmpPlate._lang5_description = Convert.ToString(Me.txt_language5.Text.Trim)
        oTmpPlate._lang6_description = Convert.ToString(Me.txt_language6.Text.Trim)
        oTmpPlate._createdate = Convert.ToDateTime(Now)
        oTmpPlate._onprocess = Convert.ToBoolean(Me.chk_in_process.Checked)
        oTmpPlate._onauction = Convert.ToBoolean(Me.chk_on_local_auction.Checked)
        oTmpPlate._club_item = Convert.ToBoolean(Me.chk_clubitem.Checked)
        oTmpPlate._onspecial = Convert.ToBoolean(Me.chk_item_special.Checked)
        oTmpPlate._onspecial_from_date = Convert.ToDateTime(Me.txt_special_from_date.Text)
        oTmpPlate._onspecial_to_date = Convert.ToDateTime(Me.txt_special_to_date.Text)
        oTmpPlate._qtyonstock_cur = Convert.ToInt32(Me.txt_stock_curr.Text)
        oTmpPlate._qtyonstock_min = Convert.ToInt32(Me.txt_stock_min.Text)
        oTmpPlate._purchase_price = Convert.ToDecimal(Me.txt_purchase_price.Text)
        oTmpPlate._appraisal_price = Convert.ToDecimal(Me.txt_appraisal_price.Text)
        oTmpPlate._dealer_price = Convert.ToDecimal(Me.txt_dealer_price.Text)
        oTmpPlate._sell_price = Convert.ToDecimal(Me.txt_sell_price.Text)
        oTmpPlate._special_sell_price = Convert.ToDecimal(Me.txt_special_sell_price.Text)
        oTmpPlate._special_dealer_price = Convert.ToDecimal(Me.txt_special_dealer_price.Text)
        oTmpPlate._notes = Convert.ToString(Me.txt_notes.Text.Trim)
        oTmpPlate._remarks = Convert.ToString(Me.txt_remarks.Text.Trim)
        oTmpPlate._indexwords = Convert.ToString(Me.txt_indexwords.Text.Trim)
        oTmpPlate._lastmodify_user = Convert.ToString(Session("user").user_name)
        oTmpPlate._lastmodify_date = Convert.ToDateTime(Now)
        oTmpPlate._lastmodify_user_id = Convert.ToInt32(Session("user").user_id)
        oTmpPlate._icon_pic = Convert.ToString(Me.txt_hdn_icon_wg.Text)
        oTmpPlate._picture_pic = Convert.ToString(Me.txt_hdn_picture_wg.Text)
        oTmpPlate._picture_hires_pic = Convert.ToString(Me.txt_hdn_hrpicture_wg.Text)
        oTmpPlate._certificate_pic = Convert.ToString(Me.txt_hdn_report_wg.Text)
        oTmpPlate._movie_pic = Convert.ToString(Me.txt_hdn_movie_wg.Text)
        oTmpPlate._gallery_pic = Convert.ToString(Me.txt_hdn_gallery_wg.Text)
        oTmpPlate._banner_pic = Convert.ToString(Me.txt_hdn_banner_wg.Text)
        oTmpPlate._similar_items = Convert.ToString(Me.txt_similaritems.Text)
        oTmpPlate._autogenerated = Convert.ToBoolean(Me.chk_autogenerated.Checked)
        oTmpPlate._item_sold = Convert.ToBoolean(Me.chk_itemsold.Checked)
        oTmpPlate.onbargain = Convert.ToBoolean(Me.chk_bargain.Checked)
        oTmpPlate.samplepic = Convert.ToBoolean(Me.chk_samplepic.Checked)
        oTmpPlate.featured = Convert.ToBoolean(Me.chk_featured.Checked)


        oTmpPlate.opthash("extraopen") = Convert.ToInt32(Convert.ToBoolean(Me.chk_extraopen.Checked))
        oTmpPlate.opthash("bestoffer") = Convert.ToInt32(Convert.ToBoolean(Me.chk_bestoffer.Checked))
        If Me.cmb_payments.SelectedIndex = 0 Then
            oTmpPlate.opthash("usepayments") = "0"
        Else
            oTmpPlate.opthash("usepayments") = "1"
            oTmpPlate.opthash("payments") = Me.cmb_payments.SelectedValue
        End If

        If Me.smartsort_text.Text <> "" Then oTmpPlate._smartsort_txt = Me.smartsort_text.Text
        If Me.chk_on_local_auction.Checked Then
            oTmpPlate.release_date = Convert.ToDateTime(Me.txt_auction_release.Text)
            If IsNumeric(Me.txt_auction_minbid.Text) Then
                oTmpPlate.auction_price = Convert.ToDecimal(Me.txt_auction_minbid.Text)
            End If
        Else
            oTmpPlate.release_date = Now()
        End If


        '--- Get SUBplate type
        Dim oSubPlate As Object
        bError = Me.get_subplate_object(Me.hid_plate_id.Text, oSubPlate)
        If bError Then
            Session("o_error")._Err_Number = Me._err_number
            Session("o_error")._Err_Description = Me._err_description
            Session("o_error")._Err_Source = Me._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "loadPlate [get_subplate_object]"
            Server.Transfer("/aspxerror.aspx")
        End If


        '--- Load SUBplate

        bError = oSubPlate.set_plate(oTmpPlate)
        If bError Then
            Session("o_error")._Err_Number = oSubPlate._err_number
            Session("o_error")._Err_Description = oSubPlate._err_description
            Session("o_error")._Err_Source = oSubPlate._err_source
            Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
            Session("o_error")._Err_Call = "loadPlate [get_plate]"
            Server.Transfer("/aspxerror.aspx")
        End If

        '--------opthash from subplates
        Select Case oTmpPlate._platetype
            Case 1
            Case 2
            Case 3

                Dim txt1 As WebControls.TextBox = oSubPlate.findcontrol("txt_bend_from")
                Dim txt2 As WebControls.TextBox = oSubPlate.findcontrol("txt_bend_to")
                If txt1.Text <> "" Then
                    oTmpPlate.opthash("bend_from") = txt1.Text
                    oTmpPlate.opthash("bend_to") = txt2.Text

                End If

                Dim ebay_title As WebControls.TextBox = oSubPlate.findcontrol("txt_ebay_title")
                If ebay_title.Text <> "" Then
                    oTmpPlate.opthash("ebaytitle") = ebay_title.Text
                End If

                'Dim default_model As WebControls.CheckBox = oSubPlate.findcontrol("chk_default_model")


                'If default_model.Checked Then
                '    oTmpPlate.opthash("defaultmodel") = "1"
                'End If

        End Select


        '--- SAVE
        Dim oTmpInventoryLogics As New ion_two.cls_inventory_lgc
        oTmpInventoryLogics._connection_string = Application("config").connection_string
        oTmpInventoryLogics._dbtype = Application("config").connection_string_type

        Select Case Convert.ToInt32(Me.hid_workmode.Text)
            Case 1    '--- ADD
                bError = oTmpInventoryLogics.insert(oTmpPlate)
                If bError Then
                    Session("o_error")._Err_Number = oTmpInventoryLogics._err_number
                    Session("o_error")._Err_Description = oTmpInventoryLogics._err_description
                    Session("o_error")._Err_Source = oTmpInventoryLogics._err_source
                    Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                    Session("o_error")._Err_Call = "btn_submit_Click [ion_two.cls_inventory_lgc:insert]"
                    Server.Transfer("/aspxerror.aspx")
                End If
                Session("message").returnpath = "/default.aspx"

            Case 2    '--- EDIT
                bError = oTmpInventoryLogics.update(oTmpPlate)
                If bError Then
                    Session("o_error")._Err_Number = oTmpInventoryLogics._err_number
                    Session("o_error")._Err_Description = oTmpInventoryLogics._err_description
                    Session("o_error")._Err_Source = oTmpInventoryLogics._err_source
                    Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                    Session("o_error")._Err_Call = "btn_submit_Click [ion_two.cls_inventory_lgc:insert]"
                    Server.Transfer("/aspxerror.aspx")
                End If
                Session("message").returnpath = "/inventory/listitem.aspx"

        End Select

        '--- Notify Iten number
        Session("message").listbox.items.add("Item saved: " + oTmpPlate._itemnumber + "  (" + Convert.ToString(oTmpPlate._id) + ")")


        '--- If no Error, process the form
        Me.lst_error.Visible = False


        Dim nItemId As Integer = 0
        Dim cItemNumber As String = ""
        Dim nItemCategory As Integer = 0


        '--- Upload files
        Dim nErrorType As Integer = 0
        bError = Me.uploadfiles(oTmpPlate._id, oTmpPlate._itemnumber, oTmpPlate._category_id)
        If bError Then
            If bError Then
                Session("o_error")._Err_Number = Me._err_number
                Session("o_error")._Err_Description = Me._err_description
                Session("o_error")._Err_Source = Me._err_source
                Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
                Session("o_error")._Err_Call = "btn_submit_Click [uploadfiles]"
                Server.Transfer("/aspxerror.aspx")
            End If
        End If

        bError = MainPlateView(False)
        If bError Then
            Server.Transfer("/apperror.aspx")
        End If

        cnt_diamonds.Visible = False
        cnt_gemstones.Visible = False
        cnt_jewelry.Visible = False





        Dim oPlateSkelet As New ion_two.skl_inventory

        Dim oPlateSkelet2 As New ion_two.skl_inventory

        '--- Define logics and get the plate
        Dim oTmpPlateLogics As New ion_two.cls_inventory_lgc

        oTmpPlateLogics._connection_string = Application("config").connection_string
        oTmpPlateLogics._dbtype = Application("config").connection_string_type

        Dim onumber As New ion_two.cls_itemnumber
        onumber._connection_string = Application("config").connection_string
        onumber._dbtype = Application("config").connection_string_type

        Dim itemid_start As Int32
        Dim itemid_end As Int32

        onumber.getid_fromnumber(Me.txt_numfrom.Text, itemid_start, bError)
        onumber.getid_fromnumber(Me.txt_numto.Text, itemid_end, bError)
        oTmpPlateLogics.read(oTmpPlate._id, oPlateSkelet)

        Dim i As Int32

        Dim subpate_id = oPlateSkelet._subplate._id

        oTmpPlateLogics.read(itemid_start, oPlateSkelet2)

        For i = itemid_start To itemid_end


            oPlateSkelet._id = i
            oPlateSkelet._subplate._id = oPlateSkelet2._subplate._id + i - itemid_start

            'If Me.chk_reset_default.Checked Then
            '    oPlateSkelet._subplate.jewel_extended = oPlateSkelet._subplate.jewel_extended.replace("|je_defaultmodel::1", "|je_defaultmodel::0")
            'End If

            If Me.chk_reset_default.Checked Then
                Dim osql As New iDac.cls_T_command

                osql._connection_string = Application("config").connection_string
                osql._dbtype = Application("config").connection_string_type

                osql._sqlstring = "update inv_jewel_extended set default_model = 0 where inventory_id = " + oPlateSkelet._id.ToString

                osql.transact_command()
            ElseIf Me.chk_disactive.Checked Then
                Dim osql As New iDac.cls_T_command

                osql._connection_string = Application("config").connection_string
                osql._dbtype = Application("config").connection_string_type

                osql._sqlstring = "update inv_inventory set  SHOPSTATUS = 0 ,QTYONSTOCK_CUR = 0 where id =" + oPlateSkelet._id.ToString

                osql.transact_command()

            ElseIf Me.chk_activate.Checked Then
                Dim osql As New iDac.cls_T_command

                osql._connection_string = Application("config").connection_string
                osql._dbtype = Application("config").connection_string_type

                osql._sqlstring = "update inv_inventory set  SHOPSTATUS = 1 ,QTYONSTOCK_CUR = 1 where id =" + oPlateSkelet._id.ToString

                osql.transact_command()
            Else
                oTmpPlateLogics.update(oPlateSkelet, True)

            End If




        Next






        Exit Sub
        '' copy part of the white gold





ErrorHandler:
        '--- Reporting Error
        Session("o_error")._Err_Number = Err.Number
        Session("o_error")._Err_Description = Err.Description
        Session("o_error")._Err_Source = Err.Source
        Session("o_error")._Err_Module = Me.Request.CurrentExecutionFilePath
        Session("o_error")._Err_Call = "btn_submit_Click [ErrorHandler]"
        Server.Transfer("/aspxerror.aspx")

    End Sub

    Private Sub chk_withpictures_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk_withpictures.CheckedChanged

    End Sub
End Class
